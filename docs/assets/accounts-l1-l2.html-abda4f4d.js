import{_ as i,W as l,X as u,Z as s,$ as n,a0 as a,a2 as e,Y as o,D as p}from"./framework-674379d2.js";const d={},r=s("h1",{id:"账户-l1-l2交易",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#账户-l1-l2交易","aria-hidden":"true"},"#"),n(" 账户:L1->L2交易")],-1),k=o(`<p>zkSync Python SDK账户与<code>eth_account</code>包兼容，在大多数情况下，用户可以通过使用它拥有自己的私钥并获得账户实例。</p><blockquote><p>Example</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">from</span> eth_account <span class="token keyword">import</span> Account
<span class="token keyword">from</span> eth_account<span class="token punctuation">.</span>signers<span class="token punctuation">.</span>local <span class="token keyword">import</span> LocalAccount
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
account<span class="token punctuation">:</span> LocalAccount <span class="token operator">=</span> Account<span class="token punctuation">.</span>from_key<span class="token punctuation">(</span><span class="token string">&quot;PRIVATE_KEY&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接与帐户一起使用的基本属性是。<code>Account.address</code>。</p><h2 id="finalizing-deposit" tabindex="-1"><a class="header-anchor" href="#finalizing-deposit" aria-hidden="true">#</a> Finalizing deposit</h2><p>存款分两步执行--在L2启动，在L1完成，它返回最终的存款收据。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
 <span class="token keyword">def</span> <span class="token function">finalize_deposit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> l1_sender<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span>l2_receiver<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span>l1_token<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span>amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> TxReceipt

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>应收款项</strong></p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>l1_sender</td><td>要存入代币的ERC20发送者地址。</td></tr><tr><td>l2_receiver</td><td>将在L2上接收存放的代币的地址。</td></tr><tr><td>l1_token</td><td>存入的L1 ERC20代币的地址。</td></tr><tr><td>amount</td><td>将要存入的代币的数量。</td></tr><tr><td>data</td><td>返回该交易的交易收据。</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
    <span class="token keyword">def</span> <span class="token function">finalize_deposit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>
                         l1_sender<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span>
                         l2_receiver<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span>
                         l1_token<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span>
                         amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
                         data<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> TxReceipt<span class="token punctuation">:</span>
        tx <span class="token operator">=</span> self<span class="token punctuation">.</span>contract<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>finalizeDeposit<span class="token punctuation">(</span>l1_sender<span class="token punctuation">,</span>
                                                     l2_receiver<span class="token punctuation">,</span>
                                                     l1_token<span class="token punctuation">,</span>
                                                     amount<span class="token punctuation">,</span>
                                                     data<span class="token punctuation">)</span><span class="token punctuation">.</span>build_transaction<span class="token punctuation">(</span>
            <span class="token punctuation">{</span>
                <span class="token string">&quot;from&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>zksync_account<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
                <span class="token string">&quot;nonce&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>_get_nonce<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;gas&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>gas_provider<span class="token punctuation">.</span>gas_limit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;gasPrice&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>gas_provider<span class="token punctuation">.</span>gas_price<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        signed_tx <span class="token operator">=</span> self<span class="token punctuation">.</span>zksync_account<span class="token punctuation">.</span>sign_transaction<span class="token punctuation">(</span>tx<span class="token punctuation">)</span>
        txn_hash <span class="token operator">=</span> self<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>zksync<span class="token punctuation">.</span>send_raw_transaction<span class="token punctuation">(</span>signed_tx<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span>
        txn_receipt <span class="token operator">=</span> self<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>zksync<span class="token punctuation">.</span>wait_for_transaction_receipt<span class="token punctuation">(</span>txn_hash<span class="token punctuation">)</span>
        <span class="token keyword">return</span> txn_receipt

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="申领失败存款" tabindex="-1"><a class="header-anchor" href="#申领失败存款" aria-hidden="true">#</a> 申领失败存款</h2><p><code>claimFailedDeposit</code>方法从发起的存款中提取资金，该存款在L2上最终确定时失败。 如果存款的L2交易失败，它将发送一个L1交易，调用L1桥的<code>claimFailedDeposit</code>方法，结果是将L1代币返回给存款人，否则就会抛出错误。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
 <span class="token keyword">def</span> <span class="token function">claim_failed_deposit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> deposit_sender<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span>
                             l1_token<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span>
                             l2tx_hash<span class="token punctuation">,</span>
                             l2_block_number<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
                             l2_msg_index<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
                             merkle_proof<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">bytes</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> TxReceipt

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>应收款项</strong></p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>deposit_sender</td><td>存款发起人的地址。</td></tr><tr><td>l2tx_hash</td><td>存款失败后的二级交易哈希值。</td></tr><tr><td>l1_token</td><td>存入的L1 ERC20代币的地址。</td></tr><tr><td>l2_block_number</td><td>处理存款最终结果的L2区块编号。</td></tr><tr><td>l2_msg_index</td><td>与消息一起发送的l2Log在二级日志Merkle树中的位置。</td></tr><tr><td>merkle_proof</td><td>处理L1-&gt;L2交易的Merkle证明，包括存款的最后处理。</td></tr></tbody></table><h2 id="获取一个nonce" tabindex="-1"><a class="header-anchor" href="#获取一个nonce" aria-hidden="true">#</a> 获取一个nonce</h2>`,17),v=s("code",null,"_get_nonce",-1),b={href:"https://web3py.readthedocs.io/en/v5/web3.eth.html?highlight=web3.eth.get_transaction_count#web3.eth.Eth.get_transaction_count",target:"_blank",rel:"noopener noreferrer"},m=o(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">def</span> <span class="token function">_get_nonce</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> account<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> transaction_count

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong></p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>account</td><td>用户的地址</td></tr></tbody></table><h2 id="存款" tabindex="-1"><a class="header-anchor" href="#存款" aria-hidden="true">#</a> 存款</h2><p>返回存款的交易收据。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">def</span> <span class="token function">deposit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> l2_receiver<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span> l1_token<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span> amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> txn_receipt

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>应收款项</strong></p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>l2_receiver</td><td>将在L2上接收存放的代币的地址。</td></tr><tr><td>l1_token</td><td>存放L1 ERC20代币的地址</td></tr><tr><td>金额</td><td>要存入的代币的金额。</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">def</span> <span class="token function">deposit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> l2_receiver<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span> l1_token<span class="token punctuation">:</span> HexStr<span class="token punctuation">,</span> amount<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        tx <span class="token operator">=</span> self<span class="token punctuation">.</span>contract<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>deposit<span class="token punctuation">(</span>l2_receiver<span class="token punctuation">,</span>
                                             l1_token<span class="token punctuation">,</span>
                                             amount<span class="token punctuation">)</span><span class="token punctuation">.</span>build_transaction<span class="token punctuation">(</span>
            <span class="token punctuation">{</span>
                <span class="token string">&quot;chainId&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>chain_id<span class="token punctuation">,</span>
                <span class="token string">&quot;from&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>account<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
                <span class="token string">&quot;nonce&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>_get_nonce<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;gas&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>gas_provider<span class="token punctuation">.</span>gas_limit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;gasPrice&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>gas_provider<span class="token punctuation">.</span>gas_price<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span> amount
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        signed_tx <span class="token operator">=</span> self<span class="token punctuation">.</span>account<span class="token punctuation">.</span>sign_transaction<span class="token punctuation">(</span>tx<span class="token punctuation">)</span>
        txn_hash <span class="token operator">=</span> self<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>send_raw_transaction<span class="token punctuation">(</span>signed_tx<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span>
        txn_receipt <span class="token operator">=</span> self<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>wait_for_transaction_receipt<span class="token punctuation">(</span>txn_hash<span class="token punctuation">)</span>
        <span class="token keyword">return</span> txn_receipt

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="提款。" tabindex="-1"><a class="header-anchor" href="#提款。" aria-hidden="true">#</a> 提款。</h2><p>提款分两步执行--在L2启动，在L1完成，此方法返回提款的交易收据。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">def</span> <span class="token function">finalize_withdrawal</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>
                            l2_block_number<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
                            l2_msg_index<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
                            msg<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span>
                            merkle_proof<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">bytes</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> txn_receipt

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数</strong></p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>l2_block_number</td><td>处理存款终结的二级区块编号。</td></tr><tr><td>l2_msg_index</td><td>与信息一起发送的l2Log在二级日志Merkle树中的位置。</td></tr><tr><td>l2_msg_index</td><td>与信息一起发送的l2Log在L2日志Merkle树中的位置。</td></tr><tr><td>merkle_proof</td><td>处理L1-&gt;L2交易的Merkle证明，有存款的最终确定。</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">def</span> <span class="token function">finalize_withdrawal</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>
                            l2_block_number<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
                            l2_msg_index<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>
                            msg<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span>
                            merkle_proof<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">bytes</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        tx <span class="token operator">=</span> self<span class="token punctuation">.</span>contract<span class="token punctuation">.</span>functions<span class="token punctuation">.</span>finalizeWithdrawal<span class="token punctuation">(</span>l2_block_number<span class="token punctuation">,</span>
                                                        l2_msg_index<span class="token punctuation">,</span>
                                                        msg<span class="token punctuation">,</span>
                                                        merkle_proof<span class="token punctuation">)</span><span class="token punctuation">.</span>build_transaction<span class="token punctuation">(</span>
            <span class="token punctuation">{</span>
                <span class="token string">&quot;chainId&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>chain_id<span class="token punctuation">,</span>
                <span class="token string">&quot;from&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>account<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
                <span class="token string">&quot;nonce&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>_get_nonce<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;gas&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>gas_provider<span class="token punctuation">.</span>gas_limit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;gasPrice&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>gas_provider<span class="token punctuation">.</span>gas_price<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        signed_tx <span class="token operator">=</span> self<span class="token punctuation">.</span>account<span class="token punctuation">.</span>sign_transaction<span class="token punctuation">(</span>tx<span class="token punctuation">)</span>
        txn_hash <span class="token operator">=</span> self<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>send_raw_transaction<span class="token punctuation">(</span>signed_tx<span class="token punctuation">.</span>rawTransaction<span class="token punctuation">)</span>
        txn_receipt <span class="token operator">=</span> self<span class="token punctuation">.</span>web3<span class="token punctuation">.</span>eth<span class="token punctuation">.</span>wait_for_transaction_receipt<span class="token punctuation">(</span>txn_hash<span class="token punctuation">)</span>
        <span class="token keyword">return</span> txn_receipt

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function _(h,g){const t=p("RouterLink"),c=p("ExternalLinkIcon");return l(),u("div",null,[r,s("p",null,[n("本节探讨了允许"),a(t,{to:"/api/python/accounts.html"},{default:e(()=>[n("account")]),_:1}),n("类从L1向L2发送交易的方法。")]),s("p",null,[n("如果你想了解一些关于L1->L2交互在zkSync上如何工作的背景，请查阅"),a(t,{to:"/api/python/dev/developer-guides/bridging/l1-l2-interop.html"},{default:e(()=>[n("introduction")]),_:1}),n("和"),a(t,{to:"/api/python/dev/dev/developer-guides/bridging/l1-l2.html"},{default:e(()=>[n("guide")]),_:1}),n(" 。")]),k,s("p",null,[v,n("方法是"),s("a",b,[n("getTransactionCount"),a(c)]),n("的别名，它返回这个账户曾经发送过的交易数。")]),m])}const x=i(d,[["render",_],["__file","accounts-l1-l2.html.vue"]]);export{x as default};
