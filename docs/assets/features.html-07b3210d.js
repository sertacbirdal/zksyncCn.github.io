import{_ as i,W as l,X as r,Z as s,$ as n,a0 as a,a2 as t,Y as o,D as p}from"./framework-674379d2.js";const u={},d=s("h1",{id:"zksync时代的特点",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#zksync时代的特点","aria-hidden":"true"},"#"),n(" zkSync时代的特点")],-1),k=s("p",null,"虽然zkSync大部分是兼容Web3的，但与Ethereum相比，它有一些区别。其中主要的是。",-1),m=s("ul",null,[s("li",null,"账户抽象支持（账户可以有近乎任意的验证逻辑，同时也启用了paymaster支持）。"),s("li",null,"部署交易需要合同的字节码在一个单独的字段中传递。"),s("li",null,"收费系统则有些不同。")],-1),v={href:"https://eips.ethereum.org/EIPS/eip-712",target:"_blank",rel:"noopener noreferrer"},b=o(`<p>本文档将只关注如何将这些参数传递给SDK。</p><h2 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides" aria-hidden="true">#</a> Overrides</h2><p><code>ethers.js</code>有一个重写的概念。对于任何链上交易，<code>ethers.js</code>都能找到最佳的<code>gasPrice</code>、<code>gasLimit</code>、<code>nonce</code>和其他重要的字段。但有时，你可能需要明确地提供这些值（例如，你想设置一个较小的<code>gasPrice</code>，或签署一个具有未来<code>nonce</code>的交易）。</p><p>在这种情况下，你可以提供一个<code>Overrides</code>对象作为最后一个参数。在那里你可以提供诸如<code>gasPrice</code>、<code>gasLimit</code>、<code>nonce</code>等字段。</p><p>为了使SDK尽可能的灵活，<code>zksync-web3</code>在覆盖中使用<code>customData</code>对象来提供zkSync特定的字段。要提供zkSync特定的字段，你需要传递以下覆盖。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
    overrides<span class="token operator">:</span> <span class="token punctuation">{</span>
        customData<span class="token operator">:</span> <span class="token punctuation">{</span>
            gasPerPubdata<span class="token operator">?</span><span class="token operator">:</span> BigNumberish<span class="token punctuation">;</span>
            factoryDeps<span class="token operator">?</span><span class="token operator">:</span> BytesLike<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            customSignature<span class="token operator">?</span><span class="token operator">:</span> BytesLike<span class="token punctuation">;</span>
            paymasterParams<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                paymaster<span class="token operator">:</span> Address<span class="token punctuation">;</span>
                paymasterInput<span class="token operator">:</span> BytesLike<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请再次注意：<code>overrides</code>中<code>customData</code>内的所有内容都与zkSync(L2 gas, etc)有关。</p><p>例子。</p><p>覆盖部署一个字节码为 &quot;0xcde...12 &quot;的合同，并强制要求运营商在第1层每发布一个字节不会收取超过 &quot;100 &quot;的二级气体。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
    customData<span class="token operator">:</span> <span class="token punctuation">{</span>
        gasPerPubdata<span class="token operator">:</span> <span class="token string">&quot;100&quot;</span><span class="token punctuation">,</span> 
        factoryDeps<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;0xcde...12&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为账户使用自定义签名<code>0x123456</code>，同时使用地址为<code>0x8e1DC7E4Bb15927E76a854a92Bf8053761501fdC</code>的paymaster和paymaster输入<code>0x8c5a3445</code>。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
    customData<span class="token operator">:</span> <span class="token punctuation">{</span>
        customSignature<span class="token operator">:</span> <span class="token string">&quot;0x123456&quot;</span><span class="token punctuation">,</span>
        paymasterParams<span class="token operator">:</span> <span class="token punctuation">{</span>
            paymaster<span class="token operator">:</span> <span class="token string">&quot;0x8e1DC7E4Bb15927E76a854a92Bf8053761501fdC&quot;</span><span class="token punctuation">,</span>
            paymasterInput<span class="token operator">:</span> <span class="token string">&quot;0x8c5a3445&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编码paymaster参数" tabindex="-1"><a class="header-anchor" href="#编码paymaster参数" aria-hidden="true">#</a> 编码paymaster参数</h2>`,13),y=s("code",null,"paymasterInput",-1),g=o(`<p>zkSync SDK提供了一个实用方法，可以用来获取正确形成的\`paymasterParams&#39;对象。[getPaymasterParams]（./utils.md#encoding-paymaster-params）。</p><h2 id="在行动中看到" tabindex="-1"><a class="header-anchor" href="#在行动中看到" aria-hidden="true">#</a> 在行动中看到</h2><p>如果你想调用一个名为<code>greeter&#39;的ethers</code>Contract<code>对象的</code>setGreeting&#39;方法，这将看起来如下，同时用[testnet paymaster]（././dev/developer-guides/aa.md#testnet-paymaster）支付费用。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// The \`setGreeting\` method has a single parameter -- new greeting</span>
<span class="token comment">// We will set its value as \`a new greeting\`.</span>
<span class="token keyword">const</span> greeting <span class="token operator">=</span> <span class="token string">&quot;a new greeting&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> tx <span class="token operator">=</span> <span class="token keyword">await</span> greeter<span class="token punctuation">.</span>populateTransaction<span class="token punctuation">.</span><span class="token function">setGreeting</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gasPrice <span class="token operator">=</span> <span class="token keyword">await</span> sender<span class="token punctuation">.</span>provider<span class="token punctuation">.</span><span class="token function">getGasPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gasLimit <span class="token operator">=</span> <span class="token keyword">await</span> greeter<span class="token punctuation">.</span>estimateGas<span class="token punctuation">.</span><span class="token function">setGreeting</span><span class="token punctuation">(</span>greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fee <span class="token operator">=</span> gasPrice<span class="token punctuation">.</span><span class="token function">mul</span><span class="token punctuation">(</span>gasLimit<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> paymasterParams <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">getPaymasterParams</span><span class="token punctuation">(</span>testnetPaymaster<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;ApprovalBased&quot;</span><span class="token punctuation">,</span>
  token<span class="token punctuation">,</span>
  <span class="token literal-property property">minimalAllowance</span><span class="token operator">:</span> fee<span class="token punctuation">,</span>
  <span class="token literal-property property">innerInput</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sentTx <span class="token operator">=</span> <span class="token keyword">await</span> sender<span class="token punctuation">.</span><span class="token function">sendTransaction</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token operator">...</span>tx<span class="token punctuation">,</span>
  <span class="token literal-property property">maxFeePerGas</span><span class="token operator">:</span> gasPrice<span class="token punctuation">,</span>
  <span class="token literal-property property">maxPriorityFeePerGas</span><span class="token operator">:</span> BigNumber<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  gasLimit<span class="token punctuation">,</span>
  <span class="token literal-property property">customData</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">gasPerPubdata</span><span class="token operator">:</span> utils<span class="token punctuation">.</span><span class="token constant">DEFAULT_GAS_PER_PUBDATA_LIMIT</span><span class="token punctuation">,</span>
    paymasterParams<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function h(_,f){const c=p("ExternalLinkIcon"),e=p("RouterLink");return l(),r("div",null,[d,k,m,s("p",null,[n("这些需要我们用新的自定义字段来扩展标准的以太坊交易。这样的扩展交易被称为EIP712交易，因为"),s("a",v,[n("EIP712"),a(c)]),n("被用来签署它们。你可以看一下EIP712交易的内部结构"),a(e,{to:"/api/js/.../api.html#eip712"},{default:t(()=>[n("这里")]),_:1}),n("。")]),b,s("p",null,[n("虽然paymaster功能本身并没有对"),y,n("的值施加任何限制，但Matter Labs团队认可某些类型的"),a(e,{to:"/api/js/.../.../dev/developer-guides/aa.html#built-in-paymaster-flows"},{default:t(()=>[n("paymaster flow")]),_:1}),n("是可以由EOAs处理的。")]),g,s("p",null,[n("你也可以看看我们的"),a(e,{to:"/api/js/.../.../dev/building-onzksync/hello-world.html"},{default:t(()=>[n("教程")]),_:1}),n("关于成熟的mini-dApp，用户可以选择token来支付费用。")])])}const x=i(u,[["render",h],["__file","features.html.vue"]]);export{x as default};
