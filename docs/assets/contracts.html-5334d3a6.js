import{_ as o,W as n,X as s,Z as t,$ as e,a0 as a,Y as r,D as l}from"./framework-674379d2.js";const i={},d=t("h1",{id:"l1合约接口",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#l1合约接口","aria-hidden":"true"},"#"),e(" L1合约接口")],-1),b=t("p",null,"要从L1与zkSync交互，你需要它的规范桥的接口。有两种主要方式将其导入到你的代码库中。",-1),h=t("ul",null,[t("li",null,[e("通过从"),t("code",null,"@matterlabs/zksync-contracts"),e(" npm包中导入它。(首选)")]),t("li",null,"通过从[repo]下载合约(https://github.com/matter-labs/v2-testnet-contracts)。")],-1),m=t("code",null,"zksync-web3",-1),_={href:"https://github.com/Emptytao/zksync-web-v2-docs/blob/main/docs/dev/developer-guides/bridging/l1-l2.md",target:"_blank",rel:"noopener noreferrer"},u=r('<p>本页将主要作为你可能需要的接口和类型的快速参考，以及如何导入它们。</p><h2 id="matterlabs-zksync-contracts参考资料" tabindex="-1"><a class="header-anchor" href="#matterlabs-zksync-contracts参考资料" aria-hidden="true">#</a> <code>@matterlabs/zksync-contracts</code>参考资料</h2><ul><li><code>@matterlabs/zksync-contracts/contracts/interfaces/IZkSync.sol</code>是zkSync L1合约接口<code>IZkSync</code>所在的文件。特别感兴趣的是<code>IBridge</code>功能。它的实现可以在[这里]（https://github.com/matter-labs/v2-testnet-contracts/blob/main/l1/contracts/zksync/interfaces/IZkSync.sol）找到。</li></ul><blockquote><ul><li><code>@matterlabs/zksync-contracts/libraries/Operations.sol</code>是存放<code>Operations</code>库的文件，其中包含桥上的所有用户类型。它的实现可以在[这里]（https://github.com/matter-labs/v2-testnet-contracts/blob/main/libraries/Operations.sol）找到。</li></ul></blockquote><p>存储库中的代码可能包含一些配置常量。这些是取自开发环境的占位值。你应该只为它所提供的接口和类型使用该库。</p>',5);function p(k,y){const c=l("ExternalLinkIcon");return n(),s("div",null,[d,b,h,t("p",null,[e("在Solidity和"),m,e("SDK中与zkSync典范桥互动的指南，可以在"),t("a",_,[e("这里"),a(c)]),e("找到。")]),u])}const z=o(i,[["render",p],["__file","contracts.html.vue"]]);export{z as default};
