import{_ as t,W as a,X as e,Y as c}from"./framework-674379d2.js";const r={},n=c('<h2 id="transactions-wip" tabindex="-1"><a class="header-anchor" href="#transactions-wip" aria-hidden="true">#</a> Transactions (WIP)</h2><p>zkSync交易与基于Web3的交易非常相似。<br> 交易被定义在软件包中: <code>zksync2.module.request_type</code><br></p><p>为了发送和签署交易，有必要在 &quot;EIP712 &quot;结构中签署和编码。.<br> EIP712交易类型可以在软件包中找到: <code>zksync2.transaction.transaction712</code></p><p>为了将普通交易转换为 &quot;EIP712 &quot;类型，有一些定义的辅助类。</p><ul><li>TxFunctionCall : 将合同作为一个签名的交易进行部署。</li><li>TxCreateContract :</li><li>TxCreate2Contract :</li></ul><h2 id="txfunctioncall" tabindex="-1"><a class="header-anchor" href="#txfunctioncall" aria-hidden="true">#</a> TxFunctionCall</h2><h2 id="txcreatecontract" tabindex="-1"><a class="header-anchor" href="#txcreatecontract" aria-hidden="true">#</a> TxCreateContract</h2><h2 id="txcreate2contract" tabindex="-1"><a class="header-anchor" href="#txcreate2contract" aria-hidden="true">#</a> TxCreate2Contract</h2>',8),o=[n];function i(s,d){return a(),e("div",null,o)}const h=t(r,[["render",i],["__file","transaction.html.vue"]]);export{h as default};
