import{_ as i,W as l,X as d,Z as n,$ as e,a0 as a,a2 as c,Y as s,D as r}from"./framework-674379d2.js";const p={},u=n("h1",{id:"hardhat-zksync-vyper-。",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hardhat-zksync-vyper-。","aria-hidden":"true"},"#"),e(" `hardhat-zksync-vyper'。")],-1),h=n("p",null,"这个插件用于在将Vyper智能合约部署到zkSync Era之前提供一个方便的接口来编译它们。",-1),k=n("h2",{id:"安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),e(" 安装")],-1),m={href:"https://www.npmjs.com/package/@matterlabs/hardhat-zksync-vyper",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.npmjs.com/package/@nomiclabs/hardhat-vyper",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"hardhat.config.ts",-1),y=s(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;@nomiclabs/hardhat-vyper&quot;</span> 。
<span class="token keyword">import</span> <span class="token string">&quot;@matterlabs/hardhat-zksync-vyper&quot;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用以下命令将该插件的最新版本添加到你的项目中。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># Yarn
yarn add -D @matterlabs/hardhat-zksync-vyper

# Npm
npm i -D @matterlabs/hardhat-zksync-vyper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="出口" tabindex="-1"><a class="header-anchor" href="#出口" aria-hidden="true">#</a> 出口</h3><p>这个插件通常不会在代码中直接使用。</p><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>zkvyper<span class="token operator">:</span> <span class="token punctuation">{</span>
  version<span class="token operator">:</span> <span class="token string">&quot;0.1.0&quot;</span><span class="token punctuation">,</span>
  compilerSource<span class="token operator">:</span> <span class="token string">&quot;binary&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// binary or docker</span>
  settings<span class="token operator">:</span> <span class="token punctuation">{</span>
    compilerPath<span class="token operator">:</span> <span class="token string">&quot;zkvyper&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// ignored for compilerSource: &quot;docker&quot;</span>
    experimental<span class="token operator">:</span> <span class="token punctuation">{</span>
      dockerImage<span class="token operator">:</span> <span class="token string">&quot;matterlabs/zkvyper&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// required for compilerSource: &quot;docker&quot;</span>
      tag<span class="token operator">:</span> <span class="token string">&quot;latest&quot;</span>  <span class="token comment">// required for compilerSource: &quot;docker&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    libraries<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// optional. References to non-inlinable libraries</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
networks<span class="token operator">:</span> <span class="token punctuation">{</span>
  hardhat<span class="token operator">:</span> <span class="token punctuation">{</span>
    zksync<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">// enables zksync in hardhat local network</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),_=s("<li><code>version</code>是一个包含<code>zkvyper</code>编译器版本的字段。编译器的版本可以在[以下资源库]（https://github.com/matter-labs/zkvyper-bin）中找到。</li><li><code>compilerSource</code>表示编译器来源，可以是<code>docker</code>或<code>binary</code>（推荐）。如果没有已经安装的二进制编译器，该插件将自动下载它。如果使用<code>docker</code>，你需要在后台运行Docker桌面，并在实验部分提供<code>dockerImage</code>和<code>tag</code>。</li><li><code>compilerPath</code>（可选）是一个包含<code>zkvyper</code>二进制文件路径的字段。默认情况下，会使用<code>$PATH</code>中的二进制文件。如果<code>compilerSource</code>是<code>docker</code>，这个字段将被忽略。</li><li><code>dockerImage</code>和<code>tag</code>构成了编译器docker镜像的名称。如果<code>compilerSource</code>是<code>binary</code>，这些字段将被忽略。</li>",4),g=n("code",null,"libraries",-1),f=n("li",null,[n("code",null,"zksync"),e('网络选项表示zkvyper是否在某个网络上被启用。默认为 "false"。对多链项目很有用，你可以只对特定的网络启用'),n("code",null,"zksync"),e("。")],-1),q=s('<p>::警告</p><p>编译器不再作为Docker镜像发布，不再推荐使用。使用<code>compilerSource: &quot;binary&quot;</code>在Hardhat配置文件中使用二进制文件来代替。</p><p>:::</p><h3 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h3><p><code>hardhat compile</code> -- 编译<code>contracts</code>目录下的所有智能合约，并创建<code>artifacts-zk</code>文件夹，其中包含所有编译工件，包括合约的工厂依赖，可用于合约部署。</p>',5);function z(x,w){const o=r("ExternalLinkIcon"),t=r("RouterLink");return l(),d("div",null,[u,h,k,n("p",null,[n("a",m,[e("@matterlabs/hardhat-zksync-vyper"),a(o)])]),n("p",null,[e("这个插件与 "),n("a",v,[e("@nomiclabs/hardhat-vyper"),a(o)]),e(" 一起使用。 要使用它，你必须在"),b,e("文件中安装并导入两个插件。")]),y,n("ul",null,[_,n("li",null,[g,e("如果你的合同使用非可linable库作为依赖，必须在这里定义。了解更多关于"),a(t,{to:"/api/hardhat/compiling-libraries.html"},{default:c(()=>[e("在这里编译库")]),_:1})]),f]),q,n("p",null,[e("要了解什么是工厂依赖，请阅读"),a(t,{to:"/api/hardhat/.../api.html"},{default:c(()=>[e("Web3 API")]),_:1}),e("文档中的更多内容。")])])}const I=i(p,[["render",z],["__file","hardhat-zksync-vyper.html.vue"]]);export{I as default};
