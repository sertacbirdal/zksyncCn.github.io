import{_ as r,W as i,X as p,Z as s,$ as n,a0 as a,a2 as c,Y as d,D as t}from"./framework-674379d2.js";const l={},u=s("h1",{id:"开始工作",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#开始工作","aria-hidden":"true"},"#"),n(" 开始工作")],-1),h=s("p",null,"在本指南中，我们将演示如何。",-1),k=s("ol",null,[s("li",null,"连接到zkSync网络。"),s("li",null,"将资产从以太坊存入zkSync。"),s("li",null,"检查余额。"),s("li",null,"转移和提取资金（本地和ERC20代币）。"),s("li",null,"部署智能合约。")],-1),m={class:"hint-container warning"},v=s("p",{class:"hint-container-title"},"Note",-1),b=s("h2",{id:"前提条件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前提条件","aria-hidden":"true"},"#"),n(" 前提条件")],-1),g={href:"https://www.swift.org/",target:"_blank",rel:"noopener noreferrer"},f=s("h2",{id:"安装",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),n(" 安装")],-1),w=s("h3",{id:"cocoapods",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#cocoapods","aria-hidden":"true"},"#"),n(" CocoaPods")],-1),y={href:"http://cocoapods.org/",target:"_blank",rel:"noopener noreferrer"},_=d(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> gem <span class="token function">install</span> cocoapods
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要使用CocoaPods将zkSync swift SDK集成到你的Xcode项目中，请在你的<code>Podfile</code>中指定它。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>platform :ios, <span class="token string">&#39;13.0&#39;</span>
use_frameworks<span class="token operator">!</span>

install<span class="token operator">!</span> <span class="token string">&#39;cocoapods&#39;</span>, :warn_for_unused_master_specs_repo <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token boolean">false</span>

target <span class="token string">&#39;&lt;Your Target Name&gt;&#39;</span> <span class="token keyword">do</span>
  pod <span class="token string">&#39;ZkSync2&#39;</span>, <span class="token string">&#39;~&gt; 0.0.1&#39;</span>
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后运行以下命令。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pod <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="连接-zksync" tabindex="-1"><a class="header-anchor" href="#连接-zksync" aria-hidden="true">#</a> 连接 zkSync</h2><p>为了与zkSync网络互动，用户需要知道运营商节点的端点。</p><p>创建一个<code>EthereumAccount&#39;的实例，有一个</code>EthereumKeyStorage&#39;提供者。这为<code>web3.swift</code>使用你的密钥提供了一个封装器。<br></p><p><strong>NOTE: 我们建议你实现你自己的_KeyStorage_提供者，而不是依靠提供的<code>EthereumKeyLocalStorage</code>类。.</strong></p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">import</span> web3

<span class="token comment">// This is just an example. EthereumKeyLocalStorage should not be used in production code</span>
<span class="token keyword">let</span> keyStorage <span class="token operator">=</span> <span class="token class-name">EthereumKeyLocalStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> account <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token class-name">EthereumAccount</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>replacing<span class="token punctuation">:</span> keyStorage<span class="token punctuation">,</span> keystorePassword<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;MY_PASSWORD&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Create an instance of <code>EthereumHttpClient</code> or <code>EthereumWebSocketClient</code>. This will then provide you access to a set of functions for interacting with the zkSync network.</p><h4 id="ethereumhttpclient" tabindex="-1"><a class="header-anchor" href="#ethereumhttpclient" aria-hidden="true">#</a> <code>EthereumHttpClient</code></h4><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">guard</span> <span class="token keyword">let</span> clientUrl <span class="token operator">=</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token class-name">EthereumHttpClient</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> clientUrl<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>或者</p><h4 id="ethereumwebsocketclient" tabindex="-1"><a class="header-anchor" href="#ethereumwebsocketclient" aria-hidden="true">#</a> <code>EthereumWebSocketClient</code></h4><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">guard</span> <span class="token keyword">let</span> clientUrl <span class="token operator">=</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;wss://zksync2-testnet.zksync.dev/ws&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> client <span class="token operator">=</span> <span class="token class-name">EthereumWebSocketClient</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> clientUrl<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，你可以与客户端方法进行互动。</p><h2 id="approvedeposits" tabindex="-1"><a class="header-anchor" href="#approvedeposits" aria-hidden="true">#</a> <code>approveDeposits</code></h2><p>它返回erc20令牌的地址。</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>    <span class="token keyword">func</span> <span class="token function-definition function">approveDeposits</span><span class="token punctuation">(</span>with token<span class="token punctuation">:</span> <span class="token class-name">Token</span><span class="token punctuation">,</span>
                         limit<span class="token punctuation">:</span> <span class="token class-name">BigUInt</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-&gt;</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token class-name">TransactionSendingResult</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>token</td><td>The Ethereum address of the token.</td></tr><tr><td>limit(optional)</td><td>The maximum amount to approve a zkSync contract.</td></tr></tbody></table><h2 id="transfer" tabindex="-1"><a class="header-anchor" href="#transfer" aria-hidden="true">#</a> <code>transfer</code></h2><p>转移方法可以转移ERC20代币，并且它返回转移的交易收据。</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>    <span class="token comment">/// Send transfer transaction. This is the regular transfer of ERC20 token.</span>
    <span class="token comment">/// - Parameters:</span>
    <span class="token keyword">func</span> <span class="token function-definition function">transfer</span><span class="token punctuation">(</span>with token<span class="token punctuation">:</span> <span class="token class-name">Token</span><span class="token punctuation">,</span>
                  amount<span class="token punctuation">:</span> <span class="token class-name">BigUInt</span><span class="token punctuation">,</span>
                  to address<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-&gt;</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token class-name">TransactionSendingResult</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter" tabindex="-1"><a class="header-anchor" href="#parameter" aria-hidden="true">#</a> Parameter</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>token</td><td>The ERC20 token address.</td></tr><tr><td>amount</td><td>The amount of tokens to transfer</td></tr><tr><td>address</td><td>The Tokens receiver address.</td></tr></tbody></table><h2 id="deposit" tabindex="-1"><a class="header-anchor" href="#deposit" aria-hidden="true">#</a> <code>deposit</code></h2><p>该方法使用<code>EthereumProvider.approvedDeposits()</code>来发送存款交易到zkSync合约，并返回存款的交易收据。</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>    <span class="token keyword">func</span> <span class="token function-definition function">deposit</span><span class="token punctuation">(</span>with token<span class="token punctuation">:</span> <span class="token class-name">Token</span><span class="token punctuation">,</span>
                 amount<span class="token punctuation">:</span> <span class="token class-name">BigUInt</span><span class="token punctuation">,</span>
                 to userAddress<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-&gt;</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token class-name">TransactionSendingResult</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter-1" tabindex="-1"><a class="header-anchor" href="#parameter-1" aria-hidden="true">#</a> Parameter</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>token</td><td>The address of the token to deposit.</td></tr><tr><td>amount</td><td>The amount of the token to be deposited.</td></tr><tr><td>userAddress</td><td>The address that will receive the deposited tokens on L2.</td></tr></tbody></table><h2 id="withdraw" tabindex="-1"><a class="header-anchor" href="#withdraw" aria-hidden="true">#</a> <code>withdraw</code></h2><p>该方法向指定的代币地址发送提款并返回交易收据。</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>    <span class="token keyword">func</span> <span class="token function-definition function">withdraw</span><span class="token punctuation">(</span>with token<span class="token punctuation">:</span> <span class="token class-name">Token</span><span class="token punctuation">,</span>
                  amount<span class="token punctuation">:</span> <span class="token class-name">BigUInt</span><span class="token punctuation">,</span>
                  from userAddress<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-&gt;</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token class-name">TransactionSendingResult</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter-2" tabindex="-1"><a class="header-anchor" href="#parameter-2" aria-hidden="true">#</a> Parameter</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>token</td><td>The address of the token to withdraw.</td></tr><tr><td>amount</td><td>The amount of the token to withdraw.</td></tr><tr><td>userAddress</td><td>The L1 withdrawal receiver address in zkSync.</td></tr></tbody></table><h2 id="isdepositapproved" tabindex="-1"><a class="header-anchor" href="#isdepositapproved" aria-hidden="true">#</a> <code>isDepositApproved</code></h2><p>该方法检查存款是否被批准，并返回一个布尔值。</p><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>    <span class="token keyword">func</span> <span class="token function-definition function">isDepositApproved</span><span class="token punctuation">(</span>with token<span class="token punctuation">:</span> <span class="token class-name">Token</span><span class="token punctuation">,</span>
                           address<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
                           threshold<span class="token punctuation">:</span> <span class="token class-name">BigUInt</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-&gt;</span> <span class="token class-name">Bool</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parameter-3" tabindex="-1"><a class="header-anchor" href="#parameter-3" aria-hidden="true">#</a> Parameter</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>token</td><td>The address of the token deposited.</td></tr><tr><td>address</td><td>The amount of the token deposited.</td></tr><tr><td>threshold</td><td>The minimum threshold of approved tokens.</td></tr><tr><td>returns</td><td>Boolean value that denotes whether deposit was approved or not.</td></tr></tbody></table>`,42);function x(S,T){const o=t("RouterLink"),e=t("ExternalLinkIcon");return i(),p("div",null,[u,h,k,s("div",m,[v,s("p",null,[n("文档的这一部分正在审查中，以反映对系统合约的修改（"),a(o,{to:"/api/swift/.../.../dev/troubleshooting/changelog.html"},{default:c(()=>[n("见changelog")]),_:1}),n("）。修订后的版本很快就会推出。")])]),b,s("p",null,[n("本指南假定你熟悉"),s("a",g,[n("Swift"),a(e)]),n("编程语言。")]),f,w,s("p",null,[s("a",y,[n("CocoaPods"),a(e)]),n("是一个用于Cocoa项目的依赖管理器。你可以用下面的命令来安装它。")]),_])}const C=r(l,[["render",x],["__file","getting-started.html.vue"]]);export{C as default};
