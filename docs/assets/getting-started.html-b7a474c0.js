import{_ as i,W as l,X as r,Z as s,$ as n,a0 as a,a2 as p,Y as e,D as c}from"./framework-674379d2.js";const d={},u=e('<h1 id="开始工作" tabindex="-1"><a class="header-anchor" href="#开始工作" aria-hidden="true">#</a> 开始工作</h1><div class="hint-container warning"><p class="hint-container-title">Note</p><p>请注意，在新的<code>0.13.1</code>SDK版本中，API/Node层使用气体操作。ergs的概念只被VM使用。</p></div><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><p>虽然大多数现有的SDK应该开箱即用，但部署智能合约或使用独特的zkSync功能，如账户抽象，需要提供Ethereum交易默认拥有的额外字段。</p>',4),k=s("code",null,"zksync-web3",-1),v={href:"https://docs.ethers.io/v5/",target:"_blank",rel:"noopener noreferrer"},h=e(`<p>该库的制作方式是，在用<code>zksync-web3</code>替换<code>ethers</code>后，大多数客户端应用程序都能开箱工作。</p><h2 id="添加依赖性" tabindex="-1"><a class="header-anchor" href="#添加依赖性" aria-hidden="true">#</a> 添加依赖性</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> zksync-web3
<span class="token function">yarn</span> <span class="token function">add</span> ethers@5 <span class="token comment"># ethers is a peer dependency of zksync-web3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后你可以用以下语句导入<code>ethers</code>库和<code>zksync-web3</code>库的所有内容。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> zksync <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> ethers <span class="token keyword">from</span> <span class="token string">&quot;ethers&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="连接到zksync" tabindex="-1"><a class="header-anchor" href="#连接到zksync" aria-hidden="true">#</a> 连接到zkSync</h2><p>为了与zkSync网络互动，用户需要知道运营商节点的端点。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Currently, only one environment is supported.</span>
<span class="token keyword">const</span> zkSyncProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">zksync</span><span class="token punctuation">.</span><span class="token function">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>**注意：**目前，只支持<code>goerli</code>网络。</p><p>有些操作需要访问Ethereum网络。<code>ethers</code>库应该被用来与 以太坊。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> ethProvider <span class="token operator">=</span> ethers<span class="token punctuation">.</span><span class="token function">getDefaultProvider</span><span class="token punctuation">(</span><span class="token string">&quot;goerli&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="创建一个钱包" tabindex="-1"><a class="header-anchor" href="#创建一个钱包" aria-hidden="true">#</a> 创建一个钱包</h2><p>为了控制你在zkSync中的账户，使用zksync.Wallet对象。它可以用存储在 ethers.Wallet，并使用zksync.Provider将交易发送到zkSync网络。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Derive zksync.Wallet from ethereum private key.</span>
<span class="token comment">// zkSync&#39;s wallets support all of the methods of ethers&#39; wallets.</span>
<span class="token comment">// Also, both providers are optional and can be connected to later via \`connect\` and \`connectToL1\`.</span>
<span class="token keyword">const</span> zkSyncWallet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">zksync</span><span class="token punctuation">.</span><span class="token function">Wallet</span><span class="token punctuation">(</span><span class="token constant">PRIVATE_KEY</span><span class="token punctuation">,</span> zkSyncProvider<span class="token punctuation">,</span> ethProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="存入资金" tabindex="-1"><a class="header-anchor" href="#存入资金" aria-hidden="true">#</a> 存入资金</h2><p>让我们把<code>1.0 ETH</code>存入我们的zkSync账户。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> deposit <span class="token operator">=</span> <span class="token keyword">await</span> zkSyncWallet<span class="token punctuation">.</span><span class="token function">deposit</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  token<span class="token operator">:</span> zksync<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token constant">ETH_ADDRESS</span><span class="token punctuation">,</span>
  amount<span class="token operator">:</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">parseEther</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：</strong> zkSync内的每个令牌都有一个地址。如果<code>ERC-20</code>代币被桥接，你应该在<code>存款</code>功能中提供代币的L1地址，或者如果你想存入ETH，则提供零地址（<code>0x000000000000000000000000</code>）。注意，对于<code>ERC-20</code>代币，其对应的L2代币的地址将与以太坊上的地址不同。</p><p>交易提交到以太坊节点后，可以使用交易手柄跟踪其状态。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Await processing of the deposit on L1</span>
<span class="token keyword">const</span> ethereumTxReceipt <span class="token operator">=</span> <span class="token keyword">await</span> deposit<span class="token punctuation">.</span><span class="token function">waitL1Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Await processing the deposit on zkSync</span>
<span class="token keyword">const</span> depositReceipt <span class="token operator">=</span> <span class="token keyword">await</span> deposit<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="检查zksync账户余额" tabindex="-1"><a class="header-anchor" href="#检查zksync账户余额" aria-hidden="true">#</a> 检查zkSync账户余额</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Retrieving the current (committed) zkSync ETH balance of an account</span>
<span class="token keyword">const</span> committedEthBalance <span class="token operator">=</span> <span class="token keyword">await</span> zkSyncWallet<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span>zksync<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token constant">ETH_ADDRESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Retrieving the ETH balance of an account in the last finalized zkSync block.</span>
<span class="token keyword">const</span> finalizedEthBalance <span class="token operator">=</span> <span class="token keyword">await</span> zkSyncWallet<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span>zksync<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token constant">ETH_ADDRESS</span><span class="token punctuation">,</span> <span class="token string">&quot;finalized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22),m=e(`<h2 id="执行一个转移" tabindex="-1"><a class="header-anchor" href="#执行一个转移" aria-hidden="true">#</a> 执行一个转移</h2><p>现在，让我们创建第二个钱包，并向其中转移一些资金。请注意，可以将资产发送到任何新的以太坊 帐户，无需预先注册</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> zkSyncWallet2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">zksync</span><span class="token punctuation">.</span><span class="token function">Wallet</span><span class="token punctuation">(</span><span class="token constant">PRIVATE_KEY2</span><span class="token punctuation">,</span> zkSyncProvider<span class="token punctuation">,</span> ethProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>让我们把<code>1 ETH</code>转移到另一个账户。</p><p>转移 &quot;方法是一个辅助方法，可以在一个接口内转移<code>ETH</code>或任何<code>ERC-20</code>代币。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> amount <span class="token operator">=</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">parseEther</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> transfer <span class="token operator">=</span> <span class="token keyword">await</span> zkSyncWallet<span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  to<span class="token operator">:</span> zkSyncWallet2<span class="token punctuation">.</span>address<span class="token punctuation">,</span>
  token<span class="token operator">:</span> zksync<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token constant">ETH_ADDRESS</span><span class="token punctuation">,</span>
  amount<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>跟踪该交易的状态。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Await commitment</span>
<span class="token keyword">const</span> committedTxReceipt <span class="token operator">=</span> <span class="token keyword">await</span> transfer<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Await finalization on L1</span>
<span class="token keyword">const</span> finalizedTxReceipt <span class="token operator">=</span> <span class="token keyword">await</span> transfer<span class="token punctuation">.</span><span class="token function">waitFinalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="提取资金" tabindex="-1"><a class="header-anchor" href="#提取资金" aria-hidden="true">#</a> 提取资金</h2><p>有两种方法可以将资金从zkSync提取到以太坊，通过L2或L1调用该操作。如果 提款操作是通过L1调用的，那么操作员有一段时间必须处理 交易，否则 &quot;PriorityMode &quot;将被打开。这保证了操作员不能进行 交易。但在大多数情况下，通过L2调用就足够了。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> withdrawL2 <span class="token operator">=</span> <span class="token keyword">await</span> zkSyncWallet<span class="token punctuation">.</span><span class="token function">withdraw</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  token<span class="token operator">:</span> zksync<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token constant">ETH_ADDRESS</span><span class="token punctuation">,</span>
  amount<span class="token operator">:</span> ethers<span class="token punctuation">.</span>utils<span class="token punctuation">.</span><span class="token function">parseEther</span><span class="token punctuation">(</span><span class="token string">&quot;0.5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>资产将被提取到目标钱包（如果没有在<code>withdraw</code>方法的参数中定义<code>to</code>地址 - 发件人地址将被选择为目的地），在这个交易的zkSync区块的有效性证明被激活并由主网合约验证后。</p><p>可以等到有效性证明验证完成后再进行。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">await</span> withdrawL2<span class="token punctuation">.</span><span class="token function">waitFinalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="部署合约" tabindex="-1"><a class="header-anchor" href="#部署合约" aria-hidden="true">#</a> 部署合约</h2><p>关于使用我们的hardhat插件部署智能合约的指南可以在<a href=".../hardhat">这里</a>。</p><h2 id="将代币添加到标准桥上" tabindex="-1"><a class="header-anchor" href="#将代币添加到标准桥上" aria-hidden="true">#</a> 将代币添加到标准桥上</h2><p>向zkSync标准桥添加令牌可以以无权限的方式进行。在向zkSync添加令牌后，它可以用于所有类型的交易。</p>`,18);function y(b,g){const o=c("ExternalLinkIcon"),t=c("RouterLink");return l(),r("div",null,[u,s("p",null,[n("为了方便访问zkSync Era的所有功能，创建了"),k,n("JavaScript SDK，它的制作方式与"),s("a",v,[n("ethers"),a(o)]),n('的接口非常相似。事实上，"ethers "是我们的库的对等依赖，"zksync-web3 "输出的大多数对象（例如 "钱包"、"供应商 "等）都继承自相应的 "ethers "对象，并且只覆盖需要修改的字段。')]),h,s("p",null,[n("你可以阅读更多关于什么是已提交和已完成的块"),a(t,{to:"/api/js/.../.../dev/developer-guides/transactions/blocks.html"},{default:p(()=>[n("这里")]),_:1}),n("。")]),m,s("p",null,[n("关于向zkSync添加令牌的文档可以在"),a(t,{to:"/api/js/accounts-l1-l2.html#adding-native-token-zksync"},{default:p(()=>[n("这里")]),_:1}),n("找到。")])])}const f=i(d,[["render",y],["__file","getting-started.html.vue"]]);export{f as default};
