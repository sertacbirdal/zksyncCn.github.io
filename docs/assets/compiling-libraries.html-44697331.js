import{_ as o,W as i,X as l,Z as n,$ as s,a0 as t,a2 as e,Y as p,D as c}from"./framework-674379d2.js";const u={},r=p(`<h1 id="编译不可连接的库" tabindex="-1"><a class="header-anchor" href="#编译不可连接的库" aria-hidden="true">#</a> 编译不可连接的库</h1><p>Solidity 库可以被分为两类。</p><ul><li><em>Inlinable</em>. 那些只包含 &quot;私有 &quot;或 &quot;内部 &quot;的方法。由于它们永远不能从外部调用，Solidity 编译器内联它们，即不使用外部调用来访问库的方法，并将这些库的代码作为使用它们代码的一部分。</li><li><em>Non-inlinable</em>. 那些至少有一个 &quot;公共 &quot;或 &quot;外部 &quot;的方法。虽然它们可能被 Solidity 编译器内联，但在编译为 Yul 表示时，它们不会被内联。由于Yul是编译为zkEVM字节码时的一个中间步骤，这意味着这些库不能被zkSync编译器内联。</li></ul><p>**实际上，这意味着具有公共方法的库需要单独部署，并在编译主合约时将其地址作为参数传递。**使用该库的方法将被替换为对其地址的调用。</p><h2 id="openzeppelin实用库" tabindex="-1"><a class="header-anchor" href="#openzeppelin实用库" aria-hidden="true">#</a> OpenZeppelin实用库</h2><p>请注意，大多数OpenZeppelin实用程序库都是可内联的。这意味着_不需要做任何进一步的操作来使它们被编译_。</p><p>这一节只描述了不可内联的库的编译情况。</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>假设我们有一个计算数字平方的小库。</p><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span>

<span class="token keyword">library</span> <span class="token class-name">MiniMath</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">square</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> x<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">pure</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token builtin">uint256</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> x<span class="token operator">*</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而有一个智能合约，使用了这个库</p><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.0</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token string">&quot;./MiniMath.sol&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token builtin">uint256</span> <span class="token keyword">public</span> lastNumber<span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">storeSquare</span><span class="token punctuation">(</span><span class="token builtin">uint256</span> x<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>
        <span class="token builtin">uint256</span> square <span class="token operator">=</span> MiniMath<span class="token punctuation">.</span><span class="token function">square</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lastNumber <span class="token operator">=</span> square<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),d=n("code",null,"yarn hardhat compile",-1),k=n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,'Error in plugin @matterlabs/hardhat-zksync-solc: LLVM("Library `contracts/MiniMath.sol:MiniMath` not found")\n')]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),v=n("p",null,[s("这个错误告诉我们，应该提供"),n("code",null,"MiniMath"),s("库的地址。")],-1),m=p(`<p>假设部署库的地址是<code>0xF9702469Dfb84A9aC171E284F71615bd3D3f1EdC</code>。为了把这个地址传递给编译器参数，打开<code>Main</code>合约所在的项目的<code>harhdat.config.ts</code>文件，在<code>zksolc</code>插件属性中添加<code>libraries</code>部分。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token string">&quot;@matterlabs/hardhat-zksync-deploy&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;@matterlabs/hardhat-zksync-solc&quot;</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  zksolc<span class="token operator">:</span> <span class="token punctuation">{</span>
    version<span class="token operator">:</span> <span class="token string">&quot;1.3.1&quot;</span><span class="token punctuation">,</span>
    compilerSource<span class="token operator">:</span> <span class="token string">&quot;binary&quot;</span><span class="token punctuation">,</span>
    settings<span class="token operator">:</span> <span class="token punctuation">{</span>
      libraries<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;contracts/MiniMath.sol&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          MiniMath<span class="token operator">:</span> <span class="token string">&quot;0xF9702469Dfb84A9aC171E284F71615bd3D3f1EdC&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultNetwork<span class="token operator">:</span> <span class="token string">&quot;zkTestnet&quot;</span><span class="token punctuation">,</span>
  networks<span class="token operator">:</span> <span class="token punctuation">{</span>
    zkTestnet<span class="token operator">:</span> <span class="token punctuation">{</span>
      url<span class="token operator">:</span> <span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">,</span> <span class="token comment">// URL of the zkSync network RPC</span>
      ethNetwork<span class="token operator">:</span> <span class="token string">&quot;goerli&quot;</span><span class="token punctuation">,</span> <span class="token comment">// Can also be the RPC URL of the Ethereum network (e.g. \`https://goerli.infura.io/v3/&lt;API_KEY&gt;\`)</span>
      zksync<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  solidity<span class="token operator">:</span> <span class="token punctuation">{</span>
    version<span class="token operator">:</span> <span class="token string">&quot;0.8.16&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>库的地址在以下几行中传递。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>libraries<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;contracts/MiniMath.sol&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;MiniMath&#39;</span><span class="token operator">:</span> <span class="token string">&#39;0xF9702469Dfb84A9aC171E284F71615bd3D3f1EdC&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>contract/MiniMath.sol</code>是库的Solidity文件的位置，<code>MiniMath</code>是库的名称。</p><p>现在，运行 &quot;yarn hardhat compile &quot;应该能成功编译 &quot;Main &quot;合约。</p>`,6);function b(h,y){const a=c("RouterLink");return i(),l("div",null,[r,n("p",null,[s("如果你试图按照"),t(a,{to:"/api/hardhat/getting-started.html"},{default:e(()=>[s("getting started")]),_:1}),s("指南中的指导方针用这两个文件创建一个项目，"),d,s("命令会失败，并出现以下错误。")]),k,v,n("p",null,[s("为了解决这个问题，你需要创建一个单独的项目，其中只有库文件。在向zkSync部署_只有库之后，你应该获得部署的库的地址，并将其传递给编译器设置。部署库的过程与部署智能合约的过程是一样的。你可以在"),t(a,{to:"/api/hardhat/getting-started.html#write-and-deploy-a-contract"},{default:e(()=>[s("入门")]),_:1}),s("指南中了解如何在zkSync上部署智能合约。")]),m])}const q=o(u,[["render",b],["__file","compiling-libraries.html.vue"]]);export{q as default};
