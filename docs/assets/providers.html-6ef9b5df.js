import{_ as c,W as i,X as r,Z as s,$ as n,a0 as a,a2 as l,Y as e,D as t}from"./framework-674379d2.js";const d={},u=s("h1",{id:"提供者",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#提供者","aria-hidden":"true"},"#"),n(" 提供者")],-1),k=s("code",null,"ethers",-1),v={href:"https://docs.ethers.io/v5/api/providers",target:"_blank",rel:"noopener noreferrer"},h=e(`<p>zkSync完全支持Ethereum Web3 API，所以你可以使用<code>ethers.js</code>的提供者对象。然而，zkSync API提供了一些额外的JSON-RPC方法，这些方法允许。</p><ul><li>轻松地跟踪L1&lt;-&gt;L2交易。</li><li>交易的不同阶段的最终结果。默认情况下，我们的RPC会返回服务器处理的最后一个状态的信息，但有些用例可能只需要跟踪 &quot;最终完成 &quot;的交易。</li></ul><p>还有更多! 一般来说，你可以使用<code>ethers</code>的提供者来快速入门，但以后可以切换到<code>zksync-web3</code>库的提供者。</p><p><code>zksync-web3</code>库输出两种类型的提供者。</p><ul><li><code>Provider</code>继承自<code>ethers</code>的<code>JsonRpcProvider</code>，提供对所有zkSync JSON-RPC端点的访问。</li><li><code>Web3Provider</code>扩展了<code>Provider</code>类，使其与Web3钱包更加兼容。*这是一种应该用于浏览器集成的钱包类型。</li></ul><h2 id="provider" tabindex="-1"><a class="header-anchor" href="#provider" aria-hidden="true">#</a> <code>Provider</code></h2><p>这是最常用的提供者类型。它提供了与<code>ethers.providers.JsonRpcProvider</code>相同的功能，但用zkSync特定的方法对其进行了扩展。</p><h3 id="创建提供者" tabindex="-1"><a class="header-anchor" href="#创建提供者" aria-hidden="true">#</a> 创建提供者</h3><p>构造函数接受操作者节点的<code>url</code>和<code>network</code>名称（可选）。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">constructor</span><span class="token punctuation">(</span>url<span class="token operator">?</span><span class="token operator">:</span> ConnectionInfo <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span> network<span class="token operator">?</span><span class="token operator">:</span> ethers<span class="token punctuation">.</span>providers<span class="token punctuation">.</span>Networkish<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="输入和输出" tabindex="-1"><a class="header-anchor" href="#输入和输出" aria-hidden="true">#</a> 输入和输出</h4><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>url?</td><td>zkSync操作员节点的URL。</td></tr><tr><td>network?</td><td>网络的描述。</td></tr><tr><td>returns</td><td><code>provider</code>对象。</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getbalance" tabindex="-1"><a class="header-anchor" href="#getbalance" aria-hidden="true">#</a> <code>getBalance </code></h3><p>返回一个用户在某个区块标签和一个本地令牌的余额。 为了检查<code>ETH</code>中的余额，你可以省略最后一个参数或提供<code>utils</code>对象中提供的<code>ETH_ADDRESS</code>。</p><p>Example:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">getBalance</span><span class="token punctuation">(</span>address<span class="token operator">:</span> Address<span class="token punctuation">,</span> blockTag<span class="token operator">?</span><span class="token operator">:</span> BlockTag<span class="token punctuation">,</span> tokenAddress<span class="token operator">?</span><span class="token operator">:</span> Address<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>BigNumber<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="输入和输出-1" tabindex="-1"><a class="header-anchor" href="#输入和输出-1" aria-hidden="true">#</a> 输入和输出</h4><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>地址</td><td>用户检查余额的地址。</td></tr><tr><td>blockTag?</td><td>检查余额的区块。*默认情况下，使用最新处理的(<code>committed</code>)块。</td></tr><tr><td>tokenAddress?</td><td>代币的地址。*默认情况下，使用ETH。</td></tr><tr><td>returns</td><td><code>BigNumber</code>对象。</td></tr></tbody></table><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">USDC_L2_ADDRESS</span> <span class="token operator">=</span> <span class="token string">&quot;0x0faF6df7054946141266420b43783387A78d82A9&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// Getting  USDC balance of account 0x0614BB23D91625E60c24AAD6a2E6e2c03461ebC5 at the latest processed block</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token string">&quot;0x0614BB23D91625E60c24AAD6a2E6e2c03461ebC5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;latest&quot;</span><span class="token punctuation">,</span> <span class="token constant">USDC_L2_ADDRESS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Getting ETH balance</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token string">&quot;0x0614BB23D91625E60c24AAD6a2E6e2c03461ebC5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取zksync智能合约地址" tabindex="-1"><a class="header-anchor" href="#获取zksync智能合约地址" aria-hidden="true">#</a> 获取zkSync智能合约地址</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">getMainContractAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="输入和输出-2" tabindex="-1"><a class="header-anchor" href="#输入和输出-2" aria-hidden="true">#</a> 输入和输出</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>returns</td><td>zkSync智能合约的地址。</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getMainContractAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取测试网的付款人地址" tabindex="-1"><a class="header-anchor" href="#获取测试网的付款人地址" aria-hidden="true">#</a> 获取测试网的付款人地址</h3><p>在zkSync测试网，测试网的付款人是可用的。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">getTestnetPaymasterAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">|</span><span class="token keyword">null</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="输入和输出-3" tabindex="-1"><a class="header-anchor" href="#输入和输出-3" aria-hidden="true">#</a> 输入和输出</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>returns</td><td>测试网支付系统的地址，如果没有则为<code>null</code>。</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getTestnetPaymasterAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取zksync默认的桥接合约地址" tabindex="-1"><a class="header-anchor" href="#获取zksync默认的桥接合约地址" aria-hidden="true">#</a> 获取zkSync默认的桥接合约地址</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">getDefaultBridgeAddresses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>
    erc20L1<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    erc20L2<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="输入和输出-4" tabindex="-1"><a class="header-anchor" href="#输入和输出-4" aria-hidden="true">#</a> 输入和输出</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>returns</td><td>L1和L2上默认的zkSync桥接合约的地址</td></tr></tbody></table><h3 id="getconfirmedtokens" tabindex="-1"><a class="header-anchor" href="#getconfirmedtokens" aria-hidden="true">#</a> <code>getConfirmedTokens</code>.</h3><p>给定<code>start</code>和<code>limit</code>，返回ID在<code>[start...start+limit-1]</code>区间内的确认令牌的信息（地址、符号、名称、小数）。这里的 &quot;确认 &quot;是一个错误的说法，因为一个确认的令牌是已经通过默认的zkSync桥接的令牌。这种方法主要由zkSync团队内部使用。</p><p>代币是按照符号的字母顺序返回的，所以基本上，代币ID是它在按字母排序的代币阵列中的位置。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">getConfirmedTokens</span><span class="token punctuation">(</span>start<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> limit<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Token<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="输入和输出-5" tabindex="-1"><a class="header-anchor" href="#输入和输出-5" aria-hidden="true">#</a> 输入和输出</h4><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>start</td><td>token id，从这个id开始返回token的信息。默认为零。</td></tr><tr><td>limit</td><td>从API返回的令牌数量。255 <em>默认</em>。</td></tr><tr><td>rturns</td><td></td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getConfirmedTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gettokenprice。" tabindex="-1"><a class="header-anchor" href="#gettokenprice。" aria-hidden="true">#</a> <code>getTokenPrice</code>。</h3><div class="hint-container warning"><p class="hint-container-title">已废弃</p><p>该方法已被废弃，并将在不久的将来被删除。</p></div><p>返回一个代币的美元价格。请注意，这是zkSync团队使用的价格，可能与当前的市场价格有一些不同。在测试网络上，代币价格可能与实际市场价格有很大差异。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">getTokenPrice</span><span class="token punctuation">(</span>token<span class="token operator">:</span> Address<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>token</td><td>The address of the token.</td></tr><tr><td>returns</td><td><code>string</code> value of the token price.</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getTokenPrice</span><span class="token punctuation">(</span><span class="token constant">USDC_L2_ADDRESS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从l1地址中获取令牌在l2上的地址-反之亦然" tabindex="-1"><a class="header-anchor" href="#从l1地址中获取令牌在l2上的地址-反之亦然" aria-hidden="true">#</a> 从L1地址中获取令牌在L2上的地址，反之亦然</h3><p>代币在L2上的地址将与L1上的地址不一样。 ETH的地址在两个网络上都被设置为零地址。</p><p>所提供的方法只对使用默认的zkSync桥接的令牌有效。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// takes L1 address, returns L2 address</span>
<span class="token keyword">async</span> <span class="token function">l2TokenAddress</span><span class="token punctuation">(</span>l1Token<span class="token operator">:</span> Address<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
<span class="token comment">// takes L2 address, returns L1 address</span>
<span class="token keyword">async</span> <span class="token function">l1TokenAddress</span><span class="token punctuation">(</span>l2Token<span class="token operator">:</span> Address<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>token</td><td>The address of the token on the one layer.</td></tr><tr><td>returns</td><td>The address of that token on the opposite layer.</td></tr></tbody></table><h3 id="gettransactionstatus-获取交易状态-。" tabindex="-1"><a class="header-anchor" href="#gettransactionstatus-获取交易状态-。" aria-hidden="true">#</a> <code>getTransactionStatus</code>（获取交易状态）。</h3><p>给定一个交易哈希值，返回该交易的状态。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">getTransactionStatus</span><span class="token punctuation">(</span>txHash<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>TransactionStatus<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>txHash</td><td>zkSync transaction hash.</td></tr><tr><td>returns</td><td>The status of the transaction. You can find the description for <code>TransactionStatus</code> enum variants in the <a href="./types">types</a>.</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">TX_HASH</span> <span class="token operator">=</span> <span class="token string">&quot;0x95395d90a288b29801c77afbe359774d4fc76c08879b64708c239da8a65dbcf3&quot;</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getTransactionStatus</span><span class="token punctuation">(</span><span class="token constant">TX_HASH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gettransaction" tabindex="-1"><a class="header-anchor" href="#gettransaction" aria-hidden="true">#</a> <code>getTransaction </code></h3><p>给出一个交易哈希值，返回L2交易响应对象。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token function">getTransaction</span><span class="token punctuation">(</span>hash<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>TransactionResponse<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>hash</td><td>zkSync transaction hash.</td></tr><tr><td>returns</td><td><code>TransactionResponse</code>对象，可以方便地跟踪交易的状态。</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Provider</span><span class="token punctuation">(</span><span class="token string">&quot;https://zksync2-testnet.zksync.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token constant">TX_HASH</span> <span class="token operator">=</span> <span class="token string">&quot;0x300baeb6804c2068ff796d95336c53ac671eef216e7ae9c17190660cdb1e2c17&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> txHandle <span class="token operator">=</span> <span class="token keyword">await</span> provider<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token constant">TX_HASH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Wait until the transaction is processed by the server.</span>
<span class="token keyword">await</span> txHandle<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Wait until the transaction is finalized.</span>
<span class="token keyword">await</span> txHandle<span class="token punctuation">.</span><span class="token function">waitFinalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="web3provider" tabindex="-1"><a class="header-anchor" href="#web3provider" aria-hidden="true">#</a> Web3Provider</h3><p>一个应该用于web3浏览器钱包集成的类，经过调整，可以轻松兼容Metamask、WalletConnect和其他流行的浏览器钱包。</p><h3 id="创建web3provider" tabindex="-1"><a class="header-anchor" href="#创建web3provider" aria-hidden="true">#</a> 创建Web3Provider</h3><p>与Provider类的构造函数的主要区别是，它接受ExternalProvider而不是节点URL。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">constructor</span><span class="token punctuation">(</span>provider<span class="token operator">:</span> ExternalProvider<span class="token punctuation">,</span> network<span class="token operator">?</span><span class="token operator">:</span> ethers<span class="token punctuation">.</span>providers<span class="token punctuation">.</span>Networkish<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="输入和输出-6" tabindex="-1"><a class="header-anchor" href="#输入和输出-6" aria-hidden="true">#</a> 输入和输出</h4><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>provider</td><td><code>ethers.provider.ExternalProvider</code>类实例。例如，在Metamask的情况下，它是<code>window.ethereum</code>。</td></tr><tr><td>网络？</td><td>网络的描述。</td></tr><tr><td>returns</td><td>返回 <code>Provider</code>对象。</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Web3Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Web3Provider</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>ethereum<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取zksync签名者" tabindex="-1"><a class="header-anchor" href="#获取zksync签名者" aria-hidden="true">#</a> 获取zkSync签名者</h3>`,80),b=s("code",null,"Signer",-1),m=s("code",null,"Signer",-1),y=e(`<h4 id="inputs-and-outputs" tabindex="-1"><a class="header-anchor" href="#inputs-and-outputs" aria-hidden="true">#</a> Inputs and outputs</h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>returns</td><td><code>Signer</code> class object.</td></tr></tbody></table><blockquote><p>Example</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Web3Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;zksync-web3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Web3Provider</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>ethereum<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> signer <span class="token operator">=</span> provider<span class="token punctuation">.</span><span class="token function">getSigner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function g(w,f){const o=t("ExternalLinkIcon"),p=t("RouterLink");return i(),r("div",null,[u,s("p",null,[n("提供者是包裹与zkSync节点的交互的对象。如果你对"),k,n("中提供者的概念感到陌生，你应该看看他们的文档"),s("a",v,[n("这里"),a(o)]),n("。")]),h,s("p",null,[n("返回一个"),b,n("对象，可用于签署zkSync交易。关于"),m,n("类的更多细节可以在下一"),a(p,{to:"/api/js/accounts.html#signer"},{default:l(()=>[n("节")]),_:1}),n("找到。")]),y])}const q=c(d,[["render",g],["__file","providers.html.vue"]]);export{q as default};
