(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{489:function(e,t,n){"use strict";n.r(t);var a=n(32),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"web3-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#web3-api"}},[e._v("#")]),e._v(" Web3 API")]),e._v(" "),n("p",[e._v("zkSync fully supports the standard "),n("a",{attrs:{href:"https://eth.wiki/json-rpc/API",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ethereum JSON-RPC API"),n("OutboundLink")],1),e._v(", but it also has some additional L2-specific functionality.")]),e._v(" "),n("p",[e._v("As long as the code does not involve deploying new smart contracts (they can only be deployed using EIP712 transactions, more on that "),n("RouterLink",{attrs:{to:"/api/api.html#eip712"}},[e._v("below")]),e._v("), "),n("em",[e._v("no changes to the codebase are needed.")])],1),e._v(" "),n("p",[e._v("You may continue using the SDKs that you use now. The UX will be identical to the one on Ethereum.")]),e._v(" "),n("p",[e._v("For deploying smart contracts or enabling the unique zkSync features for users (e.g. account abstraction), using the EIP712 transaction type is required.")]),e._v(" "),n("p",[e._v("A more detailed description of the zkSync JSON-RPC API can be found "),n("a",{attrs:{href:"../../api/api"}},[e._v("here")]),e._v(".")])])}),[],!1,null,null,null);t.default=o.exports}}]);