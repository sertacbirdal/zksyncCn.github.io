(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{487:function(t,e,r){"use strict";r.r(e);var a=r(32),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"web3-api"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web3-api"}},[t._v("#")]),t._v(" Web3 API")]),t._v(" "),r("p",[t._v("zkSync 完全支持标准的 "),r("a",{attrs:{href:"https://eth.wiki/json-rpc/API",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ethereum JSON-RPC API"),r("OutboundLink")],1),t._v("，但它还具有一些额外的 L2 特定功能。")]),t._v(" "),r("p",[t._v("只要代码不涉及部署新的智能合约（它们只能通过 EIP712 交易进行部署，更多内容见 "),r("RouterLink",{attrs:{to:"/api/api.html#eip712"}},[t._v("下文")]),t._v("），您不需要更改代码库。")],1),t._v(" "),r("p",[t._v("您可以继续使用您现在使用的 SDK。 UX 将与以太坊上的相同。")]),t._v(" "),r("p",[t._v("为了部署智能合约或为用户启用独特的 zkSync 功能（例如账户抽象），需要使用 EIP712 交易类型。")]),t._v(" "),r("p",[t._v("zkSync JSON-RPC API 的更详细描述可以在 "),r("a",{attrs:{href:"../../api/api"}},[t._v("这里")]),t._v(" 找到。")])])}),[],!1,null,null,null);e.default=n.exports}}]);