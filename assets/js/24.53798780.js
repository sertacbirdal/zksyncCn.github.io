(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{434:function(t,a,e){"use strict";e.r(a);var s=e(32),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"plugins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugins"}},[t._v("#")]),t._v(" Plugins")]),t._v(" "),e("h2",{attrs:{id:"hardhat-zksync-solc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hardhat-zksync-solc"}},[t._v("#")]),t._v(" "),e("code",[t._v("hardhat-zksync-solc")])]),t._v(" "),e("p",[t._v("This plugin is used to provide a convenient interface for compiling Solidity smart contracts before deploying them to zkSync 2.0.")]),t._v(" "),e("h3",{attrs:{id:"npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[t._v("#")]),t._v(" Npm")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.npmjs.com/package/@matterlabs/hardhat-zksync-solc",target:"_blank",rel:"noopener noreferrer"}},[t._v("@matterlabs/hardhat-zksync-solc"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Add the latest version of this plugin to your project with the following command:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# Yarn\nyarn add -D @matterlabs/hardhat-zksync-solc\n\n# Npm\nnpm i -D @matterlabs/hardhat-zksync-solc\n")])])]),e("h3",{attrs:{id:"exports"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exports"}},[t._v("#")]),t._v(" Exports")]),t._v(" "),e("p",[t._v("This plugin most often will not be used directly in the code.")]),t._v(" "),e("h3",{attrs:{id:"configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),e("p",[t._v("This plugin is configured in the "),e("code",[t._v("hardhat.config.ts")]),t._v(" file of your project. Here is an example")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("zksolc"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  version"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.2.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  compilerSource"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"binary"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// binary or docker")]),t._v("\n  settings"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compilerPath"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zksolc"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ignored for compilerSource: "docker"')]),t._v("\n    experimental"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dockerImage"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"matterlabs/zksolc"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// required for compilerSource: "docker"')]),t._v("\n      tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"latest"')]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// required for compilerSource: "docker"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    libraries"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// optional. References to non-inlinable libraries")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nnetworks"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  hardhat"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    zksync"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// enables zksync in hardhat local network")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[e("code",[t._v("version")]),t._v(" is a field with the version of the "),e("code",[t._v("zksolc")]),t._v(" compiler. Currently not used.")]),t._v(" "),e("li",[e("code",[t._v("compilerSource")]),t._v(" indicates the compiler source and can be either "),e("code",[t._v("docker")]),t._v(" or "),e("code",[t._v("binary")]),t._v(" (recommended). If there isnn't a compiler binary already installed, the plugin will automatically download it. If "),e("code",[t._v("docker")]),t._v(" is used, you'd need to run Docker desktop in the background and provide both "),e("code",[t._v("dockerImage")]),t._v(" and "),e("code",[t._v("tag")]),t._v(" in the experimental section.")]),t._v(" "),e("li",[e("code",[t._v("compilerPath")]),t._v(" is a field with the path to the "),e("code",[t._v("zksolc")]),t._v(" binary. By default, the binary in "),e("code",[t._v("$PATH")]),t._v(" is used. If "),e("code",[t._v("compilerSource")]),t._v(" is "),e("code",[t._v("docker")]),t._v(", this field is ignored.")]),t._v(" "),e("li",[e("code",[t._v("dockerImage")]),t._v(" and "),e("code",[t._v("tag")]),t._v(" make up the name of the compiler docker image. If "),e("code",[t._v("compilerSource")]),t._v(" is "),e("code",[t._v("binary")]),t._v(", these fields are ignored.")]),t._v(" "),e("li",[e("code",[t._v("libraries")]),t._v(" if your contract uses non-inlinable libraries as dependencies, they have to be defined here. Learn more about "),e("RouterLink",{attrs:{to:"/api/hardhat/compiling-libraries.html"}},[t._v("compiling libraries here")])],1),t._v(" "),e("li",[e("code",[t._v("zksync")]),t._v(" network option indicates whether zksolc is enabled on a certain network. "),e("code",[t._v("false")]),t._v(" by default. Useful for multichain projects in which you can enable "),e("code",[t._v("zksync")]),t._v(" only for specific networks.")])]),t._v(" "),e("h3",{attrs:{id:"commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[t._v("#")]),t._v(" Commands")]),t._v(" "),e("p",[e("code",[t._v("hardhat compile")]),t._v(" -- compiles all the smart contracts in the "),e("code",[t._v("contracts")]),t._v(" directory and creates the "),e("code",[t._v("artifacts-zk")]),t._v(" folder with all the compilation artifacts, including factory dependencies for the contracts, which could be used for contract deployment.")]),t._v(" "),e("p",[t._v("To understand what the factory dependencies are, read more about them in the "),e("RouterLink",{attrs:{to:"/api/api.html"}},[t._v("Web3 API")]),t._v(" documentation.")],1),t._v(" "),e("h2",{attrs:{id:"hardhat-zksync-vyper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hardhat-zksync-vyper"}},[t._v("#")]),t._v(" "),e("code",[t._v("hardhat-zksync-vyper")])]),t._v(" "),e("p",[t._v("This plugin is used to provide a convenient interface for compiling Vyper smart contracts before deploying them to zkSync 2.0.")]),t._v(" "),e("h3",{attrs:{id:"npm-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-2"}},[t._v("#")]),t._v(" Npm")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.npmjs.com/package/@matterlabs/hardhat-zksync-vyper",target:"_blank",rel:"noopener noreferrer"}},[t._v("@matterlabs/hardhat-zksync-vyper"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("This plugin is used in conjunction with "),e("a",{attrs:{href:"https://www.npmjs.com/package/@nomiclabs/hardhat-vyper",target:"_blank",rel:"noopener noreferrer"}},[t._v("@nomiclabs/hardhat-vyper"),e("OutboundLink")],1),t._v(".\nTo use it, you have to install and import both plugins in the "),e("code",[t._v("hardhat.config.ts")]),t._v(" file:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@nomiclabs/hardhat-vyper"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@matterlabs/hardhat-zksync-vyper"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("Add the latest version of this plugin to your project with the following command:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# Yarn\nyarn add -D @matterlabs/hardhat-zksync-vyper\n\n# Npm\nnpm i -D @matterlabs/hardhat-zksync-vyper\n")])])]),e("h3",{attrs:{id:"exports-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exports-2"}},[t._v("#")]),t._v(" Exports")]),t._v(" "),e("p",[t._v("This plugin most often will not be used directly in the code.")]),t._v(" "),e("h3",{attrs:{id:"configuration-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration-2"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("zkvyper"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  version"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  compilerSource"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"binary"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// binary or docker")]),t._v("\n  settings"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compilerPath"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zkvyper"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ignored for compilerSource: "docker"')]),t._v("\n    experimental"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dockerImage"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"matterlabs/zkvyper"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// required for compilerSource: "docker"')]),t._v("\n      tag"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"latest"')]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// required for compilerSource: "docker"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    libraries"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// optional. References to non-inlinable libraries")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nnetworks"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  hardhat"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    zksync"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// enables zksync in hardhat local network")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[e("code",[t._v("version")]),t._v(" is a field with the version of the "),e("code",[t._v("zkvyper")]),t._v(" compiler. Currently not used.")]),t._v(" "),e("li",[e("code",[t._v("compilerSource")]),t._v(" indicates the compiler source and can be either "),e("code",[t._v("docker")]),t._v(" or "),e("code",[t._v("binary")]),t._v(" (recommended). If there isnn't a compiler binary already installed, the plugin will automatically download it. If "),e("code",[t._v("docker")]),t._v(" is used, you'd need to run Docker desktop in the background and provide both "),e("code",[t._v("dockerImage")]),t._v(" and "),e("code",[t._v("tag")]),t._v(" in the experimental section.")]),t._v(" "),e("li",[e("code",[t._v("compilerPath")]),t._v(" is a field with the path to the "),e("code",[t._v("zkvyper")]),t._v(" binary. By default, the binary in "),e("code",[t._v("$PATH")]),t._v(" is used. If "),e("code",[t._v("compilerSource")]),t._v(" is "),e("code",[t._v("docker")]),t._v(", this field is ignored.")]),t._v(" "),e("li",[e("code",[t._v("dockerImage")]),t._v(" and "),e("code",[t._v("tag")]),t._v(" make up the name of the compiler docker image. If "),e("code",[t._v("compilerSource")]),t._v(" is "),e("code",[t._v("binary")]),t._v(", these fields are ignored.")]),t._v(" "),e("li",[e("code",[t._v("libraries")]),t._v(" if your contract uses non-inlinable libraries as dependencies, they have to be defined here. Learn more about "),e("RouterLink",{attrs:{to:"/api/hardhat/compiling-libraries.html"}},[t._v("compiling libraries here")])],1),t._v(" "),e("li",[e("code",[t._v("zksync")]),t._v(" network option indicates whether zkvyper is enabled on a certain network. "),e("code",[t._v("false")]),t._v(" by default. Useful for multichain projects in which you can enable "),e("code",[t._v("zksync")]),t._v(" only for specific networks.")])]),t._v(" "),e("h3",{attrs:{id:"commands-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commands-2"}},[t._v("#")]),t._v(" Commands")]),t._v(" "),e("p",[e("code",[t._v("hardhat compile")]),t._v(" -- compiles all the smart contracts in the "),e("code",[t._v("contracts")]),t._v(" directory and creates "),e("code",[t._v("artifacts-zk")]),t._v(" folder with all the compilation artifacts, including factory dependencies for the contracts, which could be used for contract deployment.")]),t._v(" "),e("p",[t._v("To understand what the factory dependencies are, read more about them in the "),e("RouterLink",{attrs:{to:"/api/api.html"}},[t._v("Web3 API")]),t._v(" documentation.")],1),t._v(" "),e("h2",{attrs:{id:"hardhat-zksync-deploy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hardhat-zksync-deploy"}},[t._v("#")]),t._v(" "),e("code",[t._v("hardhat-zksync-deploy")])]),t._v(" "),e("p",[t._v("This plugin provides utilities for deploying smart contracts on zkSync with artifacts built by the "),e("code",[t._v("@matterlabs/hardhat-zksync-solc")]),t._v(" or "),e("code",[t._v("@matterlabs/hardhat-zksync-vyper")]),t._v(" plugins.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("Contracts must be compiled using the official "),e("code",[t._v("@matterlabs/hardhat-zksync-solc")]),t._v(" or "),e("code",[t._v("@matterlabs/hardhat-zksync-vyper")]),t._v(" plugins. Contracts compiled with other compilers will fail to deploy to zkSync using this plugin.")])]),t._v(" "),e("h3",{attrs:{id:"npm-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npm-3"}},[t._v("#")]),t._v(" Npm")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.npmjs.com/package/@matterlabs/hardhat-zksync-deploy",target:"_blank",rel:"noopener noreferrer"}},[t._v("@matterlabs/hardhat-zksync-deploy"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Add the latest version of this plugin to your project with the following command:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n# Yarn\n\nyarn add -D @matterlabs/hardhat-zksync-deploy\n\n# Npm\n\nnpm i -D @matterlabs/hardhat-zksync-deploy\n\n")])])]),e("h3",{attrs:{id:"exports-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exports-3"}},[t._v("#")]),t._v(" Exports")]),t._v(" "),e("h4",{attrs:{id:"deployer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deployer"}},[t._v("#")]),t._v(" "),e("code",[t._v("Deployer")])]),t._v(" "),e("p",[t._v("The main export of this plugin is the "),e("code",[t._v("Deployer")]),t._v(" class. It is used to wrap a "),e("code",[t._v("zksync-web3")]),t._v(" Wallet instance and provides a convenient interface to deploy smart contracts. Its main methods are:")]),t._v(" "),e("div",{staticClass:"language-typescript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Deployer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * @param hre Hardhat runtime environment. This object is provided to scripts by hardhat itself.\n   * @param zkWallet The wallet which will be used to deploy the contracts.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hre"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HardhatRuntimeEnvironment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zkWallet"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" zk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Wallet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Created a `Deployer` object on ethers.Wallet object.\n   *\n   * @param hre Hardhat runtime environment. This object is provided to scripts by hardhat itself.\n   * @param ethWallet The wallet which will be used to deploy the contracts.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromEthWallet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hre"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HardhatRuntimeEnvironment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ethWallet"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ethers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Wallet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n   * Loads an artifact and verifies that it was compiled by `zksolc\\.\n   *\n   * @param contractNameOrFullyQualifiedName The name of the contract.\n   *   It can be a bare contract name (e.g. "Token") if it\'s\n   *   unique in your project, or a fully qualified contract name\n   *   (e.g. "contract/token.sol:Token") otherwise.\n   *\n   * @throws Throws an error if a non-unique contract name is used,\n   *   indicating which fully qualified names can be used instead.\n   *\n   * @throws Throws an error if an artifact was not compiled by `zksolc`.\n   */')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadArtifact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    contractNameOrFullyQualifiedName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ZkSyncArtifact"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Estimates the price of calling a deploy transaction in a certain fee token.\n   *\n   * @param artifact The previously loaded artifact object.\n   * @param constructorArguments List of arguments to be passed to the contract constructor.\n   *\n   * @returns Calculated fee in ETH wei.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("estimateDeployFee")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    artifact"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ZkSyncArtifact"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    constructorArguments"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ethers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BigNumber"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * Sends a deploy transaction to the zkSync network.\n    * For now it uses defaults values for the transaction parameters:\n    *\n    * @param artifact The previously loaded artifact object.\n    * @param constructorArguments List of arguments to be passed to the contract constructor.\n    * @param overrides Optional object with additional deploy transaction parameters.\n    * @param additionalFactoryDeps Additional contract bytecodes to be added to the factory dependencies list.\n    * The fee amount is requested automatically from the zkSync server.\n    *\n    * @returns A contract object.\n    */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deploy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    artifact"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ZkSyncArtifact"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    constructorArguments"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    overrides"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Overrides"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    additionalFactoryDeps"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ethers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BytesLike"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("zk"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Contract"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Extracts factory dependencies from the artifact.\n   *\n   * @param artifact Artifact to extract dependencies from\n   *\n   * @returns Factory dependencies in the format expected by SDK.\n   */")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("extractFactoryDeps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("artifact"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ZkSyncArtifact"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("To see an example script of how to use a "),e("code",[t._v("Deployer")]),t._v(" to deploy a contract, check out "),e("RouterLink",{attrs:{to:"/api/hardhat/getting-started.html#write-and-deploy-a-contract"}},[t._v("deployment section of the quickstart")]),t._v(".")],1),t._v(" "),e("h3",{attrs:{id:"configuration-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration-3"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),e("p",[t._v("Add the following properies in the "),e("code",[t._v("hardhat.config.ts")]),t._v(" file:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[t._v("zkSyncDeploy"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  zkSyncNetwork"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://zksync2-testnet.zksync.dev"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ethNetwork"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goerli"')]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Can also be the RPC URL of the network")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[e("code",[t._v("zkSyncNetwork")]),t._v(" is a field with the URL of the zkSync node.")]),t._v(" "),e("li",[e("code",[t._v("ethNetwork")]),t._v(" is a field with the URL of the Ethereum node. You can also provide network name (e.g. "),e("code",[t._v("goerli")]),t._v(") as the value of this field. In this case, the default "),e("code",[t._v("ethers")]),t._v(" provider for the network will be used.")])]),t._v(" "),e("h3",{attrs:{id:"commands-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commands-3"}},[t._v("#")]),t._v(" Commands")]),t._v(" "),e("p",[e("code",[t._v("hardhat deploy-zksync")]),t._v(" -- runs through all the scripts in the "),e("code",[t._v("deploy")]),t._v(" folder. To run a specific script, add the "),e("code",[t._v("--script")]),t._v(" argument, e.g. "),e("code",[t._v("hardhat deploy-zksync --script 001_deploy.ts")]),t._v(" will run script "),e("code",[t._v("./deploy/001_deploy.ts")]),t._v(".")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Note that deployment scripts must be placed in the "),e("code",[t._v("deploy")]),t._v(" folder!")])])])}),[],!1,null,null,null);a.default=n.exports}}]);