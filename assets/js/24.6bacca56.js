(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{433:function(t,a,s){"use strict";s.r(a);var e=s(32),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[t._v("#")]),t._v(" 插件")]),t._v(" "),s("h2",{attrs:{id:"hardhat-zksync-solc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hardhat-zksync-solc"}},[t._v("#")]),t._v(" "),s("code",[t._v("hardhat-zksync-solc")])]),t._v(" "),s("p",[t._v("该插件用于将智能合约部署到 zkSync 2.0 之前为编译 Solidity 智能合约提供一个方便的接口。")]),t._v(" "),s("h3",{attrs:{id:"npm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm"}},[t._v("#")]),t._v(" Npm")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/@matterlabs/hardhat-zksync-solc",target:"_blank",rel:"noopener noreferrer"}},[t._v("@matterlabs/hardhat-zksync-solc"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("使用以下命令将此插件的最新版本添加到您的项目中：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# Yarn\nyarn add -D @matterlabs/hardhat-zksync-solc\n\n# Npm\nnpm i -D @matterlabs/hardhat-zksync-solc\n")])])]),s("h3",{attrs:{id:"exports"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exports"}},[t._v("#")]),t._v(" Exports")]),t._v(" "),s("p",[t._v("这个插件通常不会直接在代码中使用。")]),t._v(" "),s("h3",{attrs:{id:"configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),s("p",[t._v("此插件在项目的 "),s("code",[t._v("hardhat.config.ts")]),t._v("文件中配置。 这是一个例子：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("zksolc"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.2.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  compilerSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"binary"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// binary or docker")]),t._v("\n  settings"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compilerPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zksolc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ignored for compilerSource: "docker"')]),t._v("\n    experimental"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dockerImage"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"matterlabs/zksolc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// required for compilerSource: "docker"')]),t._v("\n      tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"latest"')]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// required for compilerSource: "docker"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    libraries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// optional. References to non-inlinable libraries")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nnetworks"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  hardhat"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    zksync"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// enables zksync in hardhat local network")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("version")]),t._v(" 是带有 "),s("code",[t._v("zksolc")]),t._v(" 编译器版本的字段。目前没有使用。")]),t._v(" "),s("li",[s("code",[t._v("compilerSource")]),t._v(" 表示编译器源，可以是 "),s("code",[t._v("docker")]),t._v(" 或 "),s("code",[t._v("binary")]),t._v("（推荐）。如果尚未安装编译器二进制文件，插件将自动下载它。如果使用 "),s("code",[t._v("docker")]),t._v("，您需要在后台运行 Docker desktop，并在实验部分提供 "),s("code",[t._v("dockerImage")]),t._v(" 和 "),s("code",[t._v("tag")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("compilerPath")]),t._v(" 是一个包含 "),s("code",[t._v("zksolc")]),t._v(" 二进制文件路径的字段。默认情况下，使用 "),s("code",[t._v("$PATH")]),t._v(" 中的二进制文件。如果 "),s("code",[t._v("compilerSource")]),t._v(" 是 "),s("code",[t._v("docker")]),t._v("，这个字段会被忽略。")]),t._v(" "),s("li",[s("code",[t._v("dockerImage")]),t._v(" 和 "),s("code",[t._v("tag")]),t._v(" 组成编译器 docker 镜像的名称。如果  "),s("code",[t._v("compilerSource")]),t._v("  是 "),s("code",[t._v("binary")]),t._v("，这些字段将被忽略。")]),t._v(" "),s("li",[s("code",[t._v("libraries")]),t._v(" 如果您的合约使用不可内联的库作为依赖项，则必须在此处定义它们。详细了解"),s("RouterLink",{attrs:{to:"/api/hardhat/compiling-libraries.html"}},[t._v("编译库的更多信息")]),t._v("。")],1),t._v(" "),s("li",[s("code",[t._v("zkSync")]),t._v(" 网络选项指示是否在特定网络上启用了 zksolc。默认情况下为 "),s("code",[t._v("false")]),t._v("。"),s("code",[t._v("zkSync")]),t._v(" 对于只能在特定网络启用的多链项目很有用。")])]),t._v(" "),s("h3",{attrs:{id:"命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),s("p",[s("code",[t._v("hardhat compile")]),t._v(" -- 编译 "),s("code",[t._v("contracts")]),t._v(" 目录中的所有智能合约，并创建包含所有编译工件的 "),s("code",[t._v("artifacts-zk")]),t._v(" 文件夹，包括合约的工厂依赖项，可用于合约部署。")]),t._v(" "),s("p",[t._v("要了解工厂依赖项是什么，请在 "),s("RouterLink",{attrs:{to:"/api/api.html"}},[t._v("Web3 API")]),t._v(" 文档中阅读更多相关信息。")],1),t._v(" "),s("h2",{attrs:{id:"hardhat-zksync-vyper"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hardhat-zksync-vyper"}},[t._v("#")]),t._v(" "),s("code",[t._v("hardhat-zksync-vyper")])]),t._v(" "),s("p",[t._v("该插件用于将智能合约部署到 zkSync 2.0 之前，为编译 Solidity 智能合约提供一个方便的接口。")]),t._v(" "),s("h3",{attrs:{id:"npm-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-2"}},[t._v("#")]),t._v(" Npm")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/@matterlabs/hardhat-zksync-vyper",target:"_blank",rel:"noopener noreferrer"}},[t._v("@matterlabs/hardhat-zksync-vyper"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("此插件与 "),s("a",{attrs:{href:"https://www.npmjs.com/package/@nomiclabs/hardhat-vyper",target:"_blank",rel:"noopener noreferrer"}},[t._v("@nomiclabs/hardhat-vyper"),s("OutboundLink")],1),t._v(" 结合使用。\n要使用它，您必须在 "),s("code",[t._v("hardhat.config.ts")]),t._v(" 文件中安装并导入这两个插件：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@nomiclabs/hardhat-vyper"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@matterlabs/hardhat-zksync-vyper"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("使用以下命令将此插件的最新版本添加到您的项目中：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# Yarn\nyarn add -D @matterlabs/hardhat-zksync-vyper\n\n# Npm\nnpm i -D @matterlabs/hardhat-zksync-vyper\n")])])]),s("h3",{attrs:{id:"exports-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exports-2"}},[t._v("#")]),t._v(" Exports")]),t._v(" "),s("p",[t._v("这个插件通常不会直接在代码中使用。")]),t._v(" "),s("h3",{attrs:{id:"configuration-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration-2"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("zkvyper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  version"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  compilerSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"binary"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// binary or docker")]),t._v("\n  settings"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compilerPath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zkvyper"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ignored for compilerSource: "docker"')]),t._v("\n    experimental"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      dockerImage"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"matterlabs/zkvyper"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// required for compilerSource: "docker"')]),t._v("\n      tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"latest"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// required for compilerSource: "docker"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    libraries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// optional. References to non-inlinable libraries")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nnetworks"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  hardhat"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    zksync"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// enables zksync in hardhat local network")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("version")]),t._v(" 是带有 "),s("code",[t._v("zkvyper")]),t._v(" 编译器版本的字段。目前没有使用。")]),t._v(" "),s("li",[s("code",[t._v("compilerSource")]),t._v(" 表示编译器源，可以是 "),s("code",[t._v("docker")]),t._v(" 或 "),s("code",[t._v("binary")]),t._v("（推荐）。如果尚未安装编译器二进制文件，插件将自动下载它。如果使用 "),s("code",[t._v("docker")]),t._v("，您需要在后台运行 Docker desktop，并在实验部分提供 "),s("code",[t._v("dockerImage")]),t._v(" 和 "),s("code",[t._v("tag")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("compilerPath")]),t._v(" 是一个包含 "),s("code",[t._v("zkvyper")]),t._v(" 二进制文件路径的字段。默认情况下，使用 "),s("code",[t._v("$PATH")]),t._v(" 中的二进制文件。如果 "),s("code",[t._v("compilerSource")]),t._v(" 是 "),s("code",[t._v("docker")]),t._v("，这个字段会被忽略。")]),t._v(" "),s("li",[s("code",[t._v("dockerImage")]),t._v(" 和 "),s("code",[t._v("tag")]),t._v(" 组成编译器 docker 镜像的名称。如果 compilerSource 是 binary，这些字段将被忽略。")]),t._v(" "),s("li",[s("code",[t._v("libraries")]),t._v(" 如果您的合约使用不可内联的库作为依赖项，则必须在此处定义它们。详细了解"),s("RouterLink",{attrs:{to:"/api/hardhat/compiling-libraries.html"}},[t._v("编译库的更多信息")])],1),t._v(" "),s("li",[s("code",[t._v("zksync")]),t._v(" 网络选项指示是否在特定网络上启用了 zkvyper。默认情况下为“假”。对于您可以仅为特定网络启用“zksync”的多链项目很有用。")])]),t._v(" "),s("h3",{attrs:{id:"commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[t._v("#")]),t._v(" Commands")]),t._v(" "),s("p",[s("code",[t._v("hardhat compile")]),t._v("——编译 "),s("code",[t._v("contracts")]),t._v(" 目录中的所有智能合约，并创建 "),s("code",[t._v("artifacts-zk")]),t._v(" 文件夹，其中包含所有编译工件，包括合约的工厂依赖项，可用于合约部署。")]),t._v(" "),s("p",[t._v("要了解工厂依赖项是什么，请在 "),s("RouterLink",{attrs:{to:"/api/api.html"}},[t._v("Web3 API")]),t._v(" 文档中阅读更多相关信息。")],1),t._v(" "),s("h2",{attrs:{id:"hardhat-zksync-deploy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hardhat-zksync-deploy"}},[t._v("#")]),t._v(" "),s("code",[t._v("hardhat-zksync-deploy")])]),t._v(" "),s("p",[t._v("该插件提供实用程序，用于在 zkSync 上部署智能合约，并使用 "),s("code",[t._v("@matterlabs/hardhat-zksync-solc")]),t._v(" 或 "),s("code",[t._v("@matterlabs/hardhat-zksync-vyper")]),t._v(" 插件构建的工件。")]),t._v(" "),s("p",[t._v("::: 注意")]),t._v(" "),s("p",[t._v("合约必须使用官方的 "),s("code",[t._v("@matterlabs/hardhat-zksync-solc")]),t._v(" 或 "),s("code",[t._v("@matterlabs/hardhat-zksync-vyper")]),t._v(" 插件进行编译。 使用其他插件编译器编译的合约将无法部署到 zkSync。")]),t._v(" "),s("p",[t._v(":::")]),t._v(" "),s("h3",{attrs:{id:"npm-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-3"}},[t._v("#")]),t._v(" Npm")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.npmjs.com/package/@matterlabs/hardhat-zksync-deploy",target:"_blank",rel:"noopener noreferrer"}},[t._v("@matterlabs/hardhat-zksync-deploy"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("使用以下命令将此插件的最新版本添加到您的项目中：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# Yarn\n\nyarn add -D @matterlabs/hardhat-zksync-deploy\n\n# Npm\n\nnpm i -D @matterlabs/hardhat-zksync-deploy\n")])])]),s("h3",{attrs:{id:"exports-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exports-3"}},[t._v("#")]),t._v(" Exports")]),t._v(" "),s("h4",{attrs:{id:"deployer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployer"}},[t._v("#")]),t._v(" "),s("code",[t._v("Deployer")])]),t._v(" "),s("p",[t._v("这个插件的主要导出是 "),s("code",[t._v("Deployer")]),t._v(" 类。 它用于打包一个 "),s("code",[t._v("zksync-web3")]),t._v(" 钱包实例，并提供一个方便的接口来部署智能合约。 其主要方法有：")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Deployer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * @param hre Hardhat runtime environment. This object is provided to scripts by hardhat itself.\n   * @param zkWallet The wallet which will be used to deploy the contracts.\n   */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hre"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HardhatRuntimeEnvironment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" zkWallet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" zk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Wallet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Created a `Deployer` object on ethers.Wallet object.\n   *\n   * @param hre Hardhat runtime environment. This object is provided to scripts by hardhat itself.\n   * @param ethWallet The wallet which will be used to deploy the contracts.\n   */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromEthWallet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hre"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" HardhatRuntimeEnvironment"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ethWallet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ethers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Wallet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n   * Loads an artifact and verifies that it was compiled by `zksolc\\.\n   *\n   * @param contractNameOrFullyQualifiedName The name of the contract.\n   *   It can be a bare contract name (e.g. "Token") if it\'s\n   *   unique in your project, or a fully qualified contract name\n   *   (e.g. "contract/token.sol:Token") otherwise.\n   *\n   * @throws Throws an error if a non-unique contract name is used,\n   *   indicating which fully qualified names can be used instead.\n   *\n   * @throws Throws an error if an artifact was not compiled by `zksolc`.\n   */')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadArtifact")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    contractNameOrFullyQualifiedName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ZkSyncArtifact"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Estimates the price of calling a deploy transaction in a certain fee token.\n   *\n   * @param artifact The previously loaded artifact object.\n   * @param constructorArguments List of arguments to be passed to the contract constructor.\n   *\n   * @returns Calculated fee in ETH wei.\n   */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("estimateDeployFee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    artifact"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ZkSyncArtifact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    constructorArguments"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ethers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BigNumber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * Sends a deploy transaction to the zkSync network.\n    * For now it uses defaults values for the transaction parameters:\n    *\n    * @param artifact The previously loaded artifact object.\n    * @param constructorArguments List of arguments to be passed to the contract constructor.\n    * @param overrides Optional object with additional deploy transaction parameters.\n    * @param additionalFactoryDeps Additional contract bytecodes to be added to the factory dependencies list.\n    * The fee amount is requested automatically from the zkSync server.\n    *\n    * @returns A contract object.\n    */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    artifact"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ZkSyncArtifact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    constructorArguments"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    overrides"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Overrides"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    additionalFactoryDeps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ethers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BytesLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("zk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Contract"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * Extracts factory dependencies from the artifact.\n   *\n   * @param artifact Artifact to extract dependencies from\n   *\n   * @returns Factory dependencies in the format expected by SDK.\n   */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("extractFactoryDeps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("artifact"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ZkSyncArtifact"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("要查看如何使用 "),s("code",[t._v("Deployer")]),t._v(" 部署合约的示例脚本，请查看 "),s("RouterLink",{attrs:{to:"/api/hardhat/getting-started.html#write-and-deploy-a-contract"}},[t._v("部署部分快速入门")]),t._v("。")],1),t._v(" "),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("hardhat.config.ts")]),t._v("文件中添加以下属性：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("zkSyncDeploy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  zkSyncNetwork"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://zksync2-testnet.zksync.dev"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  ethNetwork"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"goerli"')]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Can also be the RPC URL of the network")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("zkSyncNetwork")]),t._v(" 是一个包含 zkSync 节点 URL 的字段。")]),t._v(" "),s("li",[s("code",[t._v("ethNetwork")]),t._v(" 是一个带有以太坊节点 URL 的字段。")]),t._v(" "),s("li",[t._v("您还可以提供网络名称（例如 "),s("code",[t._v("goerli")]),t._v("）作为该字段的值。 在这种情况下，将使用网络的默认 "),s("code",[t._v("ethers")]),t._v(" 提供程序。")])]),t._v(" "),s("h3",{attrs:{id:"命令-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令-2"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),s("p",[s("code",[t._v("hardhat deploy-zksync")]),t._v(" -- 运行 "),s("code",[t._v("deploy")]),t._v(" 文件夹中的所有脚本。 要运行特定脚本，请添加 "),s("code",[t._v("--script")]),t._v(" 参数，例如 "),s("code",[t._v("hardhat deploy-zksync --script 001_deploy.ts")]),t._v(" 将运行脚本 "),s("code",[t._v("./deploy/001_deploy.ts")]),t._v("。")]),t._v(" "),s("p",[t._v("::: 提示")]),t._v(" "),s("p",[t._v("请注意，部署脚本必须放在 "),s("code",[t._v("deploy")]),t._v("文件夹中!")]),t._v(" "),s("p",[t._v(":::")])])}),[],!1,null,null,null);a.default=r.exports}}]);