(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{440:function(t,a,s){"use strict";s.r(a);var e=s(32),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"zksync-features"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zksync-features"}},[t._v("#")]),t._v(" zkSync features")]),t._v(" "),s("p",[t._v("While zkSync is mostly Web3-compatible, it has some differences compared to Ethereum. The major of those are:")]),t._v(" "),s("ul",[s("li",[t._v("Account abstraction support (accounts may have near-arbitrary validation logic, and also paymaster support is enabled).")]),t._v(" "),s("li",[t._v("Deployment transactions require the contracts' bytecode to be passed in a separate field.")]),t._v(" "),s("li",[t._v("The fee system is somewhat different.")])]),t._v(" "),s("p",[t._v("These require us to extend standard Ethereum transactions with new custom fields. Such extended transactions are called EIP712 transactions since "),s("a",{attrs:{href:"https://eips.ethereum.org/EIPS/eip-712",target:"_blank",rel:"noopener noreferrer"}},[t._v("EIP712"),s("OutboundLink")],1),t._v(" is used to sign them. You can look at the internal structure of the EIP712 transactions "),s("RouterLink",{attrs:{to:"/api/api.html#eip712"}},[t._v("here")]),t._v(".")],1),t._v(" "),s("p",[t._v("This document will focus solely on how to pass these arguments to the SDK.")]),t._v(" "),s("h2",{attrs:{id:"overrides"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overrides"}},[t._v("#")]),t._v(" Overrides")]),t._v(" "),s("p",[s("code",[t._v("ethers")]),t._v(" has a notion of overrides. For any on-chain transaction, "),s("code",[t._v("ethers")]),t._v(" finds the optimal "),s("code",[t._v("gasPrice")]),t._v(", "),s("code",[t._v("gasLimit")]),t._v(", "),s("code",[t._v("nonce")]),t._v(", and other important fields under the hood. But sometimes, you may have a need to explicitly provide these values (you want to set a smaller "),s("code",[t._v("gasPrice")]),t._v(" for instance, or sign a transaction with future "),s("code",[t._v("nonce")]),t._v(").")]),t._v(" "),s("p",[t._v("In this case, you can provide an "),s("code",[t._v("Overrides")]),t._v(" object as the last parameter. There you can supply fields like "),s("code",[t._v("gasPrice")]),t._v(", "),s("code",[t._v("gasLimit")]),t._v(", "),s("code",[t._v("nonce")]),t._v(" etc.")]),t._v(" "),s("p",[t._v("In order to make the SDK as flexible as possible, the library uses the overrides to supply zkSync-specific fields. To supply zkSync-specific fields, you need to pass the following override:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    customData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ergsPerPubdata"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BigNumberish"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        factoryDeps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BytesLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        customSignature"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BytesLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        paymasterParams"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            paymaster"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            paymasterInput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BytesLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Examples:")]),t._v(" "),s("p",[t._v("Override to deploy a contract with bytecode "),s("code",[t._v("0xcde...12")]),t._v(" and enforce that the operator will not charge more than "),s("code",[t._v("100")]),t._v(" ergs per published bytes on layer 1:")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    customData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ergsPerPubdata"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        factoryDeps"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xcde...12"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Use custom signature "),s("code",[t._v("0x123456")]),t._v(" for account, while using paymaster with address "),s("code",[t._v("0x8e1DC7E4Bb15927E76a854a92Bf8053761501fdC")]),t._v(" and paymaster input "),s("code",[t._v("0x8c5a3445")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    customData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        customSignature"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x123456"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        paymasterParams"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            paymaster"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x8e1DC7E4Bb15927E76a854a92Bf8053761501fdC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            paymasterInput"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x8c5a3445"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"encoding-paymaster-params"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#encoding-paymaster-params"}},[t._v("#")]),t._v(" Encoding paymaster params")]),t._v(" "),s("p",[t._v("While the paymaster feature by itself does not impose any limitations on values of the "),s("code",[t._v("paymasterInput")]),t._v(", the Matter Labs team endorses certain types of "),s("RouterLink",{attrs:{to:"/dev/developer-guides/aa.html#built-in-paymaster-flows"}},[t._v("paymaster flows")]),t._v(" that are processable by EOAs.")],1),t._v(" "),s("p",[t._v("zkSync SDK provides a utility method that can be used to get the correctly formed "),s("code",[t._v("paymasterParams")]),t._v(" object: "),s("RouterLink",{attrs:{to:"/api/js/utils.html#encoding-paymaster-params"}},[t._v("getPaymasterParams")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"see-in-action"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#see-in-action"}},[t._v("#")]),t._v(" See in action")]),t._v(" "),s("p",[t._v("If you want to call the method "),s("code",[t._v("setGreeting")]),t._v(" of an ethers "),s("code",[t._v("Contract")]),t._v(" object called "),s("code",[t._v("greeter")]),t._v(", this would look the following way, while paying fees with the "),s("RouterLink",{attrs:{to:"/dev/developer-guides/aa.html#testnet-paymaster"}},[t._v("testnet paymaster")]),t._v(":")],1),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The `setGreeting` method has a single parameter -- new greeting")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We will set its value as `a new greeting`.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" greeting "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a new greeting"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" greeter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("populateTransaction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setGreeting")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" gasPrice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" sender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("provider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGasPrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" gasLimit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" greeter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("estimateGas"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setGreeting")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("greeting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fee "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gasPrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mul")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gasLimit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" paymasterParams "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPaymasterParams")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testnetPaymaster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ApprovalBased'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    token"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minimalAllowance")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("innerInput")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Uint8Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sentTx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" sender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("tx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxFeePerGas")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gasPrice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxPriorityFeePerGas")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" BigNumber"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    gasLimit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customData")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ergsPerPubdata")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEFAULT_ERGS_PER_PUBDATA_LIMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        paymasterParams\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("You can also check out our "),s("RouterLink",{attrs:{to:"/dev/developer-guides/hello-world.html"}},[t._v("tutorial")]),t._v(" on the full-fledged mini-dApp, where users can choose token to pay the fee.")],1)])}),[],!1,null,null,null);a.default=n.exports}}]);