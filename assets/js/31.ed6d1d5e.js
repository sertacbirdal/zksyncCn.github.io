(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{439:function(t,e,o){"use strict";o.r(e);var r=o(32),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"contracts"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#contracts"}},[t._v("#")]),t._v(" Contracts")]),t._v(" "),o("p",[o("code",[t._v("zksync-web3")]),t._v(" does not implement any new "),o("code",[t._v("Contract")]),t._v(" class, since "),o("code",[t._v("ethers.Contract")]),t._v(" fully works out of the box. However, for convenience, the library still re-exports this class.")]),t._v(" "),o("p",[t._v("Since deploying smart contracts on zkSync has some differences from deploying on Ethereum, there is a need for a specific "),o("code",[t._v("ContractFactory")]),t._v(" method. It supports the same interface as "),o("code",[t._v("ethers.ContractFactory")]),t._v(".")]),t._v(" "),o("p",[t._v("In order to pay for smart contract interactions in ERC20 tokens, "),o("code",[t._v("customData")]),t._v(" override should be used. You can read more about accessing zkSync features in "),o("RouterLink",{attrs:{to:"/api/js/features.html"}},[t._v("the next chaper")]),t._v(".")],1)])}),[],!1,null,null,null);e.default=s.exports}}]);